var documenterSearchIndex = {"docs":
[{"location":"futures/futures_examples/","page":"Kraken Futures Examples","title":"Kraken Futures Examples","text":"   CurrentModule = KrakenEx","category":"page"},{"location":"futures/futures_examples/#Kraken-Futures-Examples","page":"Kraken Futures Examples","title":"Kraken Futures Examples","text":"","category":"section"},{"location":"futures/futures_examples/","page":"Kraken Futures Examples","title":"Kraken Futures Examples","text":"Pages = [\"futures_examples.md\"]","category":"page"},{"location":"futures/futures_examples/#Futures-REST-Examples","page":"Kraken Futures Examples","title":"Futures REST Examples","text":"","category":"section"},{"location":"futures/futures_examples/","page":"Kraken Futures Examples","title":"Kraken Futures Examples","text":"using KrakenEx: FuturesBaseRESTAPI\n\nusing KrakenEx.FuturesMarketModule\nusing KrakenEx.FuturesUserModule\nusing KrakenEx.FuturesTradeModule\nusing KrakenEx.FuturesFundingModule\n\nfunction main()\n    key = \"Kraken-public-key\"\n    secret = \"Kraken-secret-key\"\n\n    # private clients can also access public endpoints\n    private_client = FuturesBaseRESTAPI(\n        API_KEY=key,\n        SECRET_KEY=secret\n    )\n\n    sandbox_client = FuturesBaseRESTAPI(\n        API_KEY=key,\n        SECRET_KEY=secret,\n        DEMO=true\n    )\n\n    #==== User Endpoints ====#\n    println(get_wallets(private_client))\n    println(get_open_orders(private_client))\n    log = get_account_log_csv(client)\n    open(\"myAccountLog.csv\", \"w\") do io\n        write(io, log)\n    end\n    # ...\n\n    #==== Market Endpoints ====#\n    println(get_ohlc(private_client,\n        tick_type=\"trade\",\n        symbol=\"PI_XBTUSD\",\n        resolution=\"1m\",\n        from=1668989233,\n        to=1668999233\n    ))\n    # ...\n\n    #==== Trade Endpoints ====#\n    println(create_order(private_client,\n        orderType=\"lmt\",\n        side=\"buy\",\n        size=1,\n        limitPrice=4,\n        symbol=\"pf_bchusd\",\n    ))\n\n    println(create_batch_order(client, batchorder_list=[\n        Dict{String,Any}(\n            \"order\" => \"send\",\n            \"order_tag\" => \"1\",\n            \"orderType\" => \"lmt\",\n            \"symbol\" => \"PI_XBTUSD\",\n            \"side\" => \"buy\",\n            \"size\" => 1,\n            \"limitPrice\" => 1.00,\n            \"cliOrdId\" => \"my-another-client-id\"\n        ),\n        Dict{String,Any}(\n            \"order\" => \"send\",\n            \"order_tag\" => \"2\",\n            \"orderType\" => \"stp\",\n            \"symbol\" => \"PI_XBTUSD\",\n            \"side\" => \"buy\",\n            \"size\" => 1,\n            \"limitPrice\" => 2.00,\n            \"stopPrice\" => 3.00,\n        ),\n        Dict{String,Any}(\n            \"order\" => \"send\",\n            \"order_tag\" => \"2\",\n            \"orderType\" => \"stp\",\n            \"symbol\" => \"PI_XBTUSD\",\n            \"side\" => \"buy\",\n            \"size\" => 1,\n            \"limitPrice\" => 2.00,\n            \"stopPrice\" => 3.00,\n        ),\n        Dict{String,Any}(\n            \"order\" => \"cancel\",\n            \"order_id\" => \"e35d61dd-8a30-4d5f-a574-b5593ef0c050\",\n        ),\n        Dict{String,Any}(\n            \"order\" => \"cancel\",\n            \"cliOrdId\" => \"my_client_id1234\"\n        )\n    ]))\n\n    println(cancel_all_orders(private_client))\n    # ...\n\n    #==== Funding Endpoints ====#\n    println(get_historical_funding_rates(private_client, symbol=\"PI_XBTUSD\"))\n    # ...\nend\n\nmain()","category":"page"},{"location":"futures/futures_examples/","page":"Kraken Futures Examples","title":"Kraken Futures Examples","text":"","category":"page"},{"location":"futures/futures_examples/#Futures-WebSocket-Example","page":"Kraken Futures Examples","title":"Futures WebSocket Example","text":"","category":"section"},{"location":"futures/futures_examples/","page":"Kraken Futures Examples","title":"Kraken Futures Examples","text":"using KrakenEx\nusing KrakenEx.FuturesWebsocketModule:\n    FuturesWebSocketClient,\n    connect,\n    subscribe, unsubscribe\n\nfunction main()\n    key = \"Kraken-public-key\"\n    secret = \"Kraken-secret-key\"\n    ws_client = FuturesWebSocketClient(key, secret)\n\n    function on_message(msg::Union{Dict{String,Any},String})\n        println(msg)\n        # implement your strategy here....\n\n        #=\n            Dont forget that you can also access public rest endpoints here.\n            If the `ws_client` instance is authenticated, you can also\n            use private endpoints:\n\n        KrakenEx.FuturesMarketModule.cancel_order(\n            ws_client.rest_client,\n            txid=\"XXXXXX-XXXXXX-XXXXXX\"\n        )\n        =#\n    end\n\n    #=\n       `connect` can establish a private and a public connection at the same time.\n       You can turn off either the private or the public connection\n       using `private=false` or `public=false`.\n    =#\n    con = @async connect(ws_client, callback=on_message, private=true)\n\n    #== Subscribe to public and private websocket feeds ==#\n\n    # public feeds\n    products::Vector{String} = [\"PI_XBTUSD\", \"PF_SOLUSD\"]\n    subscribe(client=ws_client, feed=\"ticker\", products=products)\n    # subscribe(client=ws_client, feed=\"ticker\", products=products)\n    # subscribe(client=ws_client, feed=\"book\", products=products)\n    # subscribe(client=ws_client, feed=\"trade\", products=products)\n    # subscribe(client=ws_client, feed=\"ticker_lite\", products=products)\n    # subscribe(client=ws_client, feed=\"heartbeat\")\n    # ...\n\n    # private feeds\n    subscribe(client=ws_client, feed=\"fills\")\n    # subscribe(client=ws_client, feed=\"open_positions\")\n    subscribe(client=ws_client, feed=\"open_orders\")\n    # subscribe(client=ws_client, feed=\"open_orders_verbose\")\n    # subscribe(client=ws_client, feed=\"deposits_withdrawals\")\n    # subscribe(client=ws_client, feed=\"account_balances_and_margins\")\n    # subscribe(client=ws_client, feed=\"balances\")\n    # subscribe(client=ws_client, feed=\"account_log\")\n    # subscribe(client=ws_client, feed=\"notifications_auth\")\n    # ...\n\n    # wait before unsubscribe is done ...\n    sleep(2)\n\n    #== Unsubscribe from public and private websocket feeds ==#\n    unsubscribe(client=ws_client, feed=\"ticker\", products=[\"PF_SOLUSD\"])\n    # unsubscribe(client=ws_client, feed=\"ticker\", products=[\"PF_XBTUSD\"])\n    # unsubscribe(client=ws_client, feed=\"fills\")\n    # unsubscribe(client=ws_client, feed=\"open_orders\")\n    # ...\n\n    # to cancel a connection you can use:\n    # ws_client.cancel_private_connection = true\n    # ws_client.cancel_public_connection = true\n    # ...\n\n    wait(con)\nend\n\nmain()","category":"page"},{"location":"license/#License","page":"License","title":"License","text":"","category":"section"},{"location":"license/","page":"License","title":"License","text":"using Markdown, KrakenEx\nMarkdown.parse_file(joinpath(pkgdir(KrakenEx), \"LICENSE\"))","category":"page"},{"location":"spot/spot_examples/","page":"Kraken Spot Examples","title":"Kraken Spot Examples","text":"   CurrentModule = KrakenEx","category":"page"},{"location":"spot/spot_examples/#Kraken-Spot-Examples","page":"Kraken Spot Examples","title":"Kraken Spot Examples","text":"","category":"section"},{"location":"spot/spot_examples/","page":"Kraken Spot Examples","title":"Kraken Spot Examples","text":"Pages = [\"spot_examples.md\"]","category":"page"},{"location":"spot/spot_examples/#Spot-REST-Examples","page":"Kraken Spot Examples","title":"Spot REST Examples","text":"","category":"section"},{"location":"spot/spot_examples/","page":"Kraken Spot Examples","title":"Kraken Spot Examples","text":"using KrakenEx: SpotBaseRESTAPI\n\nusing KrakenEx.SpotMarketModule\nusing KrakenEx.SpotUserModule\nusing KrakenEx.SpotTradeModule\nusing KrakenEx.SpotFundingModule\nusing KrakenEx.SpotStakingModule\n#= you can also import specific functions\ne.g.:\nusing KrakenEx.SpotMarketModule: get_ohlc, get_assets\n=#\n\nfunction main()\n    # public client\n    client = SpotBaseRESTAPI()\n\n    # authenticated client\n    private_client = SpotBaseRESTAPI(\n        key=\"Kraken-public-key\",\n        secret=\"Kraken-secret-key\"\n    )\n\n    #===== User Endpoints =====#\n    println(get_account_balance(private_client))\n    println(get_open_orders(private_client))\n    # ...\n\n    #===== Market Endpoints =====#\n    println(get_assets(client))\n    println(get_tradable_asset_pair(client, pair=[\"XBTUSD\", \"DOTUSD\"]))\n    println(get_ticker(client, pair=\"DOTUSD\"))\n    # ...\n\n    #===== Trade Endpoints =====#\n    println(\n        create_order(\n            private_client,\n            ordertype=\"limit\",\n            side=\"buy\",\n            volume=1,\n            pair=\"XBTUSD\",\n            price=\"10\",\n            oflags=\"post\",\n            validate=true\n        )\n    )\n    # ...\n\n    #===== Funding Endpoints =====#\n    println(get_deposit_methods(private_client, asset=\"DOT\"))\n    println(get_deposit_address(private_client, asset=\"DOT\", method=\"Polkadot\"))\n    # ...\n\n    #===== Staking Endpoints =====#\n    println(list_stakeable_assets(private_client))\n    println(stake_asset(\n        private_client, asset=\"DOT\", amount=20000, method=\"polkadot-staked\"\n    ))\n    # ...\nend\n\nmain()","category":"page"},{"location":"spot/spot_examples/","page":"Kraken Spot Examples","title":"Kraken Spot Examples","text":"","category":"page"},{"location":"spot/spot_examples/#Spot-WebSocket-Example","page":"Kraken Spot Examples","title":"Spot WebSocket Example","text":"","category":"section"},{"location":"spot/spot_examples/","page":"Kraken Spot Examples","title":"Kraken Spot Examples","text":"\nusing KrakenEx\nusing KrakenEx.SpotWebSocketModule:\n    SpotWebSocketClient,\n    connect,\n    subscribe, unsubscribe\n\nfunction main()\n    key = \"Kraken-public-key\"\n    secret = \"Kraken-secret-key\"\n\n    ws_client = SpotWebSocketClient(key, secret)\n\n    function on_message(msg::Union{Dict{String,Any},String})\n        println(msg)\n        # implement your strategy here....\n\n        #=\n            Dont forget that you can also access public rest endpoints here.\n            If the `ws_client` instance is authenticated, you can also\n            use private endpoints:\n\n        KrakenEx.SpotMarketModule.cancel_order(\n            ws_client.rest_client,\n            txid=\"XXXXXX-XXXXXX-XXXXXX\"\n        )\n        =#\n    end\n\n    # create a public and a private websocket connection\n    # specify `private=false` or `public=false` to use only one feed\n    con = @async connect(ws_client, callback=on_message, private=true)\n\n    #== Subscribe to public and private websocket feeds ==#\n    subscribe(\n        client=ws_client,\n        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n        pairs=[\"XBT/USD\", \"DOT/USD\"]\n    )\n\n    subscribe(\n        client=ws_client,\n        subscription=Dict{String,Any}(\"name\" => \"ownTrades\")\n    )\n\n    # wait before unsubscribe is done ...\n    sleep(2)\n\n    #== Unsubscribe from public and private websocket feeds ==#\n    # unsubscribe(\n    #     client=ws_client,\n    #     subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n    #     pairs=[\"XBT/USD\", \"DOT/USD\"]\n    # )\n    # unsubscribe(\n    #     client=ws_client,\n    #     subscription=Dict{String,Any}(\"name\" => \"ownTrades\")\n    # )\n\n    # to cancel a connection you can use:\n    # ws_client.cancel_private_connection = true\n    # ws_client.cancel_public_connection = true\n\n    wait(con)\nend\n\nmain()","category":"page"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"   CurrentModule = KrakenEx.SpotWebSocketModule","category":"page"},{"location":"spot/spot_websocket/#Kraken-Spot-WebSocket-API","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"","category":"section"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"The listed functions and data types allow to access to public and private (authenticated) websocket feeds.","category":"page"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"Pages = [\"spot_websocket.md\"]","category":"page"},{"location":"spot/spot_websocket/#SpotWebSocketClient","page":"Kraken Spot WebSocket API","title":"SpotWebSocketClient","text":"","category":"section"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"SpotWebSocketClient","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.SpotWebSocketClient","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.SpotWebSocketClient","text":"SpotWebSocketClient\n\nType that stores information about the client and can be used to establish public and private websocket connections for  Kraken Spot trading.\n\nFields\n\nkey – Kraken Spot API key\nsecret – Kraken Spot Secret key\n\nAdjustable attributes:\n\ncancel_public_connection – can be set disable the active public websocket connection\ncancel_private_connection – can be set to disable the active private websocket connection\n\nThe following will be managed by the constructor or connection:\n\nrest_client – public or private instance of SpotBaseRESTAPI \npublic_url – default websocket url for Kraken public Spot trading (default: \"ws.kraken.com\")\nprivate_url – default websocket url for Kraken private Spot trading (default: \"ws-auth.kraken.com\")\nactive_subscriptions – List of active subscribed feeds\npending_subscriptions – List of pending subscribtions\npending_messages – List of pending messages (e.g. create_order events)\n\nNotes\n\nThe attribute rest_client stores a valid SpotBaseRESTAPI client, so REST endpoints can also be accessed using this attributes. If the  SpotWebSocketClient  is authenticated, so the rest_client attribute can also access private endpoints.\n\nExamples\n\nSpotWebSocketClient() – default, public client\nSpotWebSocketClient(\"the-api-key\", \"the-api-secret-key\") – authenticated client for public and private requests\n\n\n\n\n\n","category":"type"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"","category":"page"},{"location":"spot/spot_websocket/#WebSocket-utilities","page":"Kraken Spot WebSocket API","title":"WebSocket utilities","text":"","category":"section"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"connect(\n    client::SpotWebSocketClient;\n    callback::Core.Function,\n    public::Bool=true,\n    private::Bool=false\n)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.connect-Tuple{KrakenEx.SpotWebSocketModule.SpotWebSocketClient}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.connect","text":"connect(\n    client::SpotWebSocketClient;\n    callback::Core.Function,\n    public::Bool=true,\n    private::Bool=false\n)\n\nCan create up to two (one private and one public) websocket connections. The public and/or private websocket object will be stored within the SpotWebSocketClient.  Websocket feeds can be subscribed and unsubscribed after a successful connection.  This function must be invoked using @async. Private websocket connections and privat feed  subscriptions requre an authenticated SpotWebSocketClient.\n\nAttributes\n\nclient::SpotWebSocketClient – the SpotWebSocketClient instance\ncallback::Core.Function – Callback function wich receives the websocket messages\npublic::Bool=true – switch to activate/deactivate the public websocket connection\nprivate::Bool=false – switch to activate/deactivate the private websocket connection\n\nExample\n\njulia> # ws_client = SpotWebSocketClient() # unauthenticated\njulia> ws_client = SpotWebSocketClient(\"api-key\", \"api-secret\") # authenticated\njulia> function on_message(msg::Union{Dict{String,Any},String})\n...        println(msg)\n...        # implement your strategy here\n...    end \njulia> con = @async connect(ws_client, callback=on_message, private=true)\njulia> subscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\", \"DOT/USD\"]\n...    )\njulia> # do more stuff ... \njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"subscribe(;\n    client::SpotWebSocketClient,\n    subscription::Dict{String,Any},\n    pairs::Union{Vector{String},Nothing}=nothing\n)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.subscribe-Tuple{}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.subscribe","text":"subscribe(;\n    client::SpotWebSocketClient,\n    subscription::Dict{String,Any},\n    pairs::Union{Vector{String},Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/websockets/#message-subscribe\n\nSubscribe to a websocket feed.\n\nExample\n\njulia> ws_client = SpotWebSocketClient()\njulia> on_message(msg::Union{Dict{String,Any},String}) = println(msg)\njulia> con = @async connect(ws_client, callback=on_message)\njulia> subscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\", \"DOT/USD\"]\n...    )\njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"unsubscribe(;\n    client::SpotWebSocketClient,\n    subscription::Dict{String,Any},\n    pairs::Union{Vector{String},Nothing}=nothing\n)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.unsubscribe-Tuple{}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.unsubscribe","text":"unsubscribe(;\n    client::SpotWebSocketClient,\n    subscription::Dict{String,Any},\n    pairs::Union{Vector{String},Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/websockets/#message-unsubscribe\n\nUnsubscribe from a subscribed feed.\n\nExample\n\njulia> ws_client = SpotWebSocketClient()\njulia> on_message(msg::Union{Dict{String,Any},String}) = println(msg)\njulia> con = @async connect(ws_client, callback=on_message)\njulia> unsubscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\", \"DOT/USD\"]\n...    )\njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot_websocket/#Client-functions","page":"Kraken Spot WebSocket API","title":"Client functions","text":"","category":"section"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"create_order(client::SpotWebSocketClient;\n    ordertype::String,\n    side::String,\n    pair::String,\n    volume::Union{String,Nothing},\n    price::Union{String,Nothing}=nothing,\n    price2::Union{String,Nothing}=nothing,\n    leverage::Union{Float64,Int64,String,Nothing}=nothing,\n    oflags::Union{String,Vector{String},Nothing}=nothing,\n    starttm::String=\"0\",\n    expiretim::String=\"0\",\n    deadline::Union{String,Nothing}=nothing,\n    userref::Union{Int32,Nothing}=nothing,\n    validate::Bool=false,\n    close_ordertype::Union{String,Nothing}=nothing,\n    close_price::Union{String,Nothing}=nothing,\n    close_price2::Union{String,Nothing}=nothing,\n    timeinforce::Union{String,Nothing}=nothing\n)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.create_order-Tuple{KrakenEx.SpotWebSocketModule.SpotWebSocketClient}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.create_order","text":"create_order(client::SpotWebSocketClient;\n    ordertype::String,\n    side::String,\n    pair::String,\n    volume::Union{String,Nothing},\n    price::Union{String,Nothing}=nothing,\n    price2::Union{String,Nothing}=nothing,\n    leverage::Union{Float64,Int64,String,Nothing}=nothing,\n    oflags::Union{String,Vector{String},Nothing}=nothing,\n    starttm::String=\"0\",\n    expiretim::String=\"0\",\n    deadline::Union{String,Nothing}=nothing,\n    userref::Union{Int32,Nothing}=nothing,\n    validate::Bool=false,\n    close_ordertype::Union{String,Nothing}=nothing,\n    close_price::Union{String,Nothing}=nothing,\n    close_price2::Union{String,Nothing}=nothing,\n    timeinforce::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/websockets/#message-addOrder\n\nAuthenticated client required\n\nExample\n\njulia> using KrakenEx.SpotWebsocketModule: \n...        SpotWebSocketClient,\n...        connect, subscribe,\n...        create_order\njulia> ws_client = SpotWebSocketClient(\"api-key\", \"api-secret\")\njulia> function on_message(msg::Union{Dict{String,Any},String})\n...        println(msg)\n...        if condition # set your own conditions ... \n...            create_order(\n...                client,\n...                side=\"buy\",\n...                pair=\"XBTUSD\",\n...                volume=\"0.0001\",\n...                ordertype=\"market\",\n...             )\n...        end\n...    end \njulia> con = @async connect(ws_client, callback=on_message, private=true)\njulia> subscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\"]\n...    )\njulia> # do more stuff ... \njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"edit_order(client::SpotWebSocketClient;\n    txid::String,\n    pair::String,\n    volume::Union{String,Int64,Float64,Nothing}=nothing,\n    price::Union{String,Int64,Float64,Nothing}=nothing,\n    price2::Union{String,Int64,Float64,Nothing}=nothing,\n    oflags::Union{String,Vector{String},Nothing}=nothing,\n    deadline::Union{String,Nothing}=nothing,\n    cancel_response::Bool=false,\n    validate::Bool=false,\n    userref::Union{Int32,Nothing}=nothing\n)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.edit_order-Tuple{KrakenEx.SpotWebSocketModule.SpotWebSocketClient}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.edit_order","text":"edit_order(client::SpotWebSocketClient;\n    txid::String,\n    pair::String,\n    volume::Union{String,Int64,Float64,Nothing}=nothing,\n    price::Union{String,Int64,Float64,Nothing}=nothing,\n    price2::Union{String,Int64,Float64,Nothing}=nothing,\n    oflags::Union{String,Vector{String},Nothing}=nothing,\n    deadline::Union{String,Nothing}=nothing,\n    cancel_response::Bool=false,\n    validate::Bool=false,\n    userref::Union{Int32,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/websockets/#message-editOrder\n\nAuthenticated client required\n\nExample\n\njulia> using KrakenEx.SpotWebsocketModule: \n...        SpotWebSocketClient,\n...        connect, subscribe,\n...        edit_order\njulia> ws_client = SpotWebSocketClient(\"api-key\", \"api-secret\")\njulia> function on_message(msg::Union{Dict{String,Any},String})\n...        println(msg)\n...        if condition # set your own conditions ... \n...            edit_order(\n...                client,\n...                txid=\"xxxxxx-xxxxxx-xxxxxx-xxxxxx\",\n...                volume=\"0.0002\",\n...             )\n...        end\n...    end \njulia> con = @async connect(ws_client, callback=on_message, private=true)\njulia> subscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\"]\n...    )\njulia> # do more stuff ... \njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"cancel_order(client::SpotWebSocketClient; txid::String)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.cancel_order-Tuple{KrakenEx.SpotWebSocketModule.SpotWebSocketClient}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.cancel_order","text":"cancel_order(client::SpotWebSocketClient; txid::String)\n\nKraken Docs: https://docs.kraken.com/websockets/#message-cancelOrder\n\nCancel an order by txid.\n\nAuthenticated client required\n\nExample\n\njulia> using KrakenEx.SpotWebsocketModule: \n...        SpotWebSocketClient,\n...        connect, subscribe,\n...        cancel_order\njulia> ws_client = SpotWebSocketClient(\"api-key\", \"api-secret\")\njulia> function on_message(msg::Union{Dict{String,Any},String})\n...        println(msg)\n...        if condition # set your own conditions ... \n...            cancel_order(\n...                client,\n...                txid=\"xxxxxx-xxxxxx-xxxxxx-xxxxxx\",\n...             )\n...        end\n...    end \njulia> con = @async connect(ws_client, callback=on_message, private=true)\njulia> subscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\"]\n...    )\njulia> # do more stuff ... \njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"cancel_all_orders(client::SpotWebSocketClient)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.cancel_all_orders-Tuple{KrakenEx.SpotWebSocketModule.SpotWebSocketClient}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.cancel_all_orders","text":"cancel_all_orders(client::SpotWebSocketClient)\n\nKraken Docs: https://docs.kraken.com/websockets/#message-cancelAll\n\nCancel all orders.\n\nAuthenticated client required\n\nExample\n\njulia> using KrakenEx.SpotWebsocketModule: \n...        SpotWebSocketClient,\n...        connect, subscribe,\n...        cancel_all_orders\njulia> ws_client = SpotWebSocketClient(\"api-key\", \"api-secret\")\njulia> function on_message(msg::Union{Dict{String,Any},String})\n...        println(msg)\n...        if condition # set your own conditions ... \n...            cancel_all_orders(client)\n...        end\n...    end \njulia> con = @async connect(ws_client, callback=on_message, private=true)\njulia> subscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\"]\n...    )\njulia> # do more stuff ... \njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot_websocket/","page":"Kraken Spot WebSocket API","title":"Kraken Spot WebSocket API","text":"cancel_all_orders_after_x(client::SpotWebSocketClient, timeout::Int)","category":"page"},{"location":"spot/spot_websocket/#KrakenEx.SpotWebSocketModule.cancel_all_orders_after_x-Tuple{KrakenEx.SpotWebSocketModule.SpotWebSocketClient, Int64}","page":"Kraken Spot WebSocket API","title":"KrakenEx.SpotWebSocketModule.cancel_all_orders_after_x","text":"cancel_all_orders_after_x(client::SpotWebSocketClient, timeout::Int)\n\nKraken Docs: https://docs.kraken.com/websockets/#message-cancelAllOrdersAfter\n\nCancel all orders after timeout seconds. Set timeout=0 to reset.\n\nAuthenticated client required\n\nExample\n\njulia> using KrakenEx.SpotWebsocketModule: \n...        SpotWebSocketClient,\n...        connect, subscribe,\n...        cancel_all_orders_after_x\njulia> ws_client = SpotWebSocketClient(\"api-key\", \"api-secret\")\njulia> function on_message(msg::Union{Dict{String,Any},String})\n...        println(msg)\n...        if condition # set your own conditions ... \n...            cancel_all_orders_after_x(client, timeout=60)\n...        end\n...    end \njulia> con = @async connect(ws_client, callback=on_message, private=true)\njulia> subscribe(\n...        client=ws_client,\n...        subscription=Dict{String,Any}(\"name\" => \"ticker\"),\n...        pairs=[\"XBT/USD\"]\n...    )\njulia> # do more stuff ... \njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"   CurrentModule = KrakenEx","category":"page"},{"location":"spot/spot/#Kraken-Spot-REST-API","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"","category":"section"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"The listed modules and functions allow to access public and private (authenticated) endpoints of the official Kraken Spot API. All functions of these endpoints require a SpotBaseRESTAPI instance. For accessing private endpoints valid API keys must be generated at https://www.kraken.com/u/security/api. Some endpoints require specific premissions enables, other may require a higer tier rank. Please see the official Kraken documentation in the References section for futher information.","category":"page"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"The sample outputs are for illustrative purposes only and may vary depending on the user, request, and market behavior.","category":"page"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"Pages = [\"spot.md\"]","category":"page"},{"location":"spot/spot/#SpotBaseRESTAPI","page":"Kraken Spot REST API","title":"SpotBaseRESTAPI","text":"","category":"section"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"KrakenEx.SpotBaseAPIModule.SpotBaseRESTAPI","category":"page"},{"location":"spot/spot/#KrakenEx.SpotBaseAPIModule.SpotBaseRESTAPI","page":"Kraken Spot REST API","title":"KrakenEx.SpotBaseAPIModule.SpotBaseRESTAPI","text":"SpotBaseRESTAPI\n\nType that stores information about the client and can be used to access public and private endpoints of the Kraken API for  Spot trading.\n\nFields\n\nkey  – Kraken Spot API key\nsecret – Kraken Spot Secret key\n\nDefualt:\n\nBASE_URL  – Kraken Spot API base url (default: \"https://api.kraken.com\")\nAPI_V  – Kraken Spot API version (default: 0)\nTIMEOUT  – Request timeout (default: 10)\nHEADERS  – Default headers {default: [\"User-Agent\" => \"KrakenEx.jl\"]}\n\nExamples\n\nSpotBaseRESTAPI() – default, public client\nSpotBaseRESTAPI(key=\"the-api-key\", secret=\"the-api-secret-key\") – authenticated client for public and private requests\n\n\n\n\n\n","category":"type"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"","category":"page"},{"location":"spot/spot/#Market","page":"Kraken Spot REST API","title":"Market","text":"","category":"section"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"Modules = [KrakenEx.SpotMarketModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"spot/spot/#KrakenEx.SpotMarketModule","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule","text":"SpotMarketModule\n\nEnables accessing Spot market endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_assets-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_assets","text":"get_assets(client::SpotBaseRESTAPI; assets::Union{Vector{String},String,Nothing}=nothing, aclass::Union{String,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getAssetInfo\n\nReturns a list of available Spot assets as well as additional descriptions.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> println(get_assets(client))\nDict{String, Any}(\n    \"MOVR\" => Dict{String, Any}(\n        \"display_decimals\" => 5,\n        \"decimals\" => 10,\n        \"aclass\" => \"currency\",\n        \"status\" => \"enabled\",\n        \"altname\" => \"MOVR\"\n    ), \"SXP\" => Dict{String, Any}(\n        \"display_decimals\" => 5,\n        \"decimals\" => 10,\n        \"aclass\" => \"currency\",\n        \"status\" => \"enabled\",\n        \"altname\" => \"SXP\"\n    ), \"PHA\" => Dict{String, Any}(\n        \"display_decimals\" => 5,\n        \"decimals\" => 10,\n        \"aclass\" => \"currency\",\n        \"status\" => \"enabled\",\n        \"altname\" => \"PHA\"\n    ), ...\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_ohlc-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_ohlc","text":"get_ohlc(client::SpotBaseRESTAPI; pair::String, interval::Union{String,Int,Nothing}=nothing, since::Union{Int,String,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getOHLCData\n\nReturns information about the open, high, low, close, vwap, and volume of a given pair.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> get_ohlc(client, pair=\"XBTUSD\")\nDict{String, Any}(\n    \"XXBTZUSD\" => Any[\n        Any[1673301660, \"17176.5\", \"17176.5\", \"17176.4\", \"17176.5\", \"17176.4\", \"0.00499447\", 3],\n        Any[1673301720, \"17176.5\", \"17176.5\", \"17167.2\", \"17168.1\", \"17168.3\", \"3.57307618\", 45],\n        Any[1673301780, \"17168.0\", \"17168.1\", \"17167.9\", \"17168.1\", \"17167.9\", \"0.10257254\", 16],\n        Any[1673301840, \"17168.0\", \"17176.5\", \"17168.0\", \"17176.5\", \"17176.2\", \"1.06103454\", 19],\n        Any[1673301900, \"17176.4\", \"17176.5\", \"17176.4\", \"17176.5\", \"17176.4\", \"0.20158908\", 4],\n        Any[1673301960, \"17176.5\", \"17176.5\", \"17176.4\", \"17176.5\", \"17176.4\", \"0.04299818\", 7],\n        ...\n    ]\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_order_book-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_order_book","text":"get_order_book(client::SpotBaseRESTAPI; pair::String, count::Union{Int,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getOrderBook\n\nReturns the current asks and bids (orderbook) of a given currency pair.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> get_order_book(client, pair=\"XBTUSD\")\nDict{String, Any}(\n    \"XXBTZUSD\" => Dict{String, Any}(\n        \"asks\" => Any[\n            Any[\"17249.60000\", \"0.750\", 1673344930], Any[\"17249.80000\", \"0.038\", 1673344927],\n            Any[\"17249.90000\", \"0.067\", 1673344930], Any[\"17250.10000\", \"0.001\", 1673344930],\n            Any[\"17250.50000\", \"4.348\", 1673344903], Any[\"17251.10000\", \"0.053\", 1673344928],\n            Any[\"17251.30000\", \"1.157\", 1673344928], Any[\"17251.50000\", \"0.807\", 1673344930],\n            Any[\"17252.40000\", \"0.369\", 1673344921], Any[\"17252.60000\", \"0.250\", 1673344857],\n            ...\n        ],\n        \"bids\" => Any[\n            Any[\"17249.50000\", \"0.001\", 1673344924],\n            Any[\"17249.40000\", \"0.001\", 1673344916],\n            Any[\"17249.30000\", \"0.001\", 1673344930],\n            Any[\"17249.20000\", \"0.001\", 1673344927],\n            Any[\"17249.10000\", \"0.001\", 1673344930],\n            ...\n        ]\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_recent_spreads-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_recent_spreads","text":"get_recent_spreads(client::SpotBaseRESTAPI; pair::String, since::Union{Int,String,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getRecentSpreads\n\nReturns the recent spreads of a currency pair (symbol).\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> println(get_recent_spreads(client, pair=\"XBTUSD\"))\nDict{String, Any}(\n    \"XXBTZUSD\" => Any[\n        Any[1673363656, \"17346.40000\", \"17348.20000\"],\n        Any[1673363657, \"17346.40000\", \"17347.90000\"],\n        Any[1673363657, \"17346.80000\", \"17347.90000\"],\n        Any[1673363660, \"17346.80000\", \"17347.60000\"],\n        Any[1673363660, \"17346.40000\", \"17347.60000\"],\n        Any[1673363660, \"17346.50000\", \"17347.60000\"],\n        ...\n    ],\n    \"last\" => 1673363958)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_recent_trades-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_recent_trades","text":"get_recent_trades(client::SpotBaseRESTAPI; pair::String, since::Union{Int,String,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getRecentTrades\n\nReturns the recent trades of a given symbol (currency pair).\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> println(get_recent_trades(client, pair=\"XBTUSD\"))\nDict{String, Any}(\n    \"XXBTZUSD\" => Any[\n        Any[\"17265.50000\", \"0.00515323\", 1.673362549987055e9, \"b\", \"l\", \"\", 54454372],\n        Any[\"17265.50000\", \"0.01203124\", 1.6733625510070226e9, \"b\", \"l\", \"\", 54454373],\n        Any[\"17266.80000\", \"0.08087410\", 1.673362551007105e9, \"b\", \"l\", \"\", 54454374],\n        Any[\"17266.90000\", \"0.56059466\", 1.6733625510071838e9, \"b\", \"l\", \"\", 54454375],\n        Any[\"17267.00000\", \"0.00900000\", 1.6733625512079215e9, \"b\", \"l\", \"\", 54454376],\n        Any[\"17267.00000\", \"0.00610000\", 1.6733625522878373e9, \"b\", \"l\", \"\", 54454377],\n        Any[\"17267.00000\", \"0.00208447\", 1.6733625534015026e9, \"b\", \"l\", \"\", 54454378],\n        Any[\"17268.50000\", \"0.01211553\", 1.6733625534015663e9, \"b\", \"l\", \"\", 54454379],\n        Any[\"17268.50000\", \"0.00506894\", 1.6733625536050434e9, \"b\", \"l\", \"\", 54454380],\n        ...\n    ],\n    \"last\" => \"1673363844906015910\"\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_server_time-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_server_time","text":"get_server_time(client::SpotBaseRESTAPI)\n\nReturns the server time of the Kraken Cryptocurrency Exchange API\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> println(get_server_time(client))\n1673344450\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_system_status-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_system_status","text":"get_system_status(client::SpotBaseRESTAPI)\n\nReturns the system status of the Kraken API\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> println(get_system_status(client))\nDict{String, Any}(\"status\" => \"online\", \"timestamp\" => \"2023-01-10T15:20:20Z\")\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_ticker-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_ticker","text":"get_ticker(client::SpotBaseRESTAPI; pair::Union{Vector{String},String,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getTickerInformation\n\nReturns the actual ticker of a given pair (asset pair/symbol).\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> println(get_ticker(client, pair=\"DOTUSD\"))\nDict{String, Any}(\n    \"DOTUSD\" => Dict{String, Any}(\n        \"v\" => Any[\"73347.09060256\", \"831710.16212826\"],\n        \"c\" => Any[\"4.91490\", \"145.01800000\"],\n        \"o\" => \"4.88630\", \"t\" => Any[635, 3486],\n        \"b\" => Any[\"4.91220\", \"265\", \"265.000\"],\n        \"l\" => Any[\"4.82900\", \"4.82900\"],\n        \"a\" => Any[\"4.91290\", \"82\", \"82.000\"],\n        \"p\" => Any[\"4.89699\", \"4.97257\"],\n        \"h\" => Any[\"4.93300\", \"5.07400\"]\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotMarketModule.get_tradable_asset_pair-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotMarketModule.get_tradable_asset_pair","text":"get_tradable_asset_pair(client::SpotBaseRESTAPI; pair::Vector{String}, info::String=\"info\")\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getTradableAssetPairs\n\nReturns a list of available symbols (asset pairs) and additional informarion.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = SpotBaseRESTAPI()\njulia> println(get_tradable_asset_pair(client, pair=[\"XBTUSD\"]))\nDict{String, Any}(\n    \"XXBTZUSD\" => Dict{String, Any}(\n        \"margin_call\" => 80,\n        \"leverage_sell\" => Any[2, 3, 4, 5],\n        \"cost_decimals\" => 5,\n        \"lot_multiplier\" => 1,\n        \"long_position_limit\" => 270,\n        \"short_position_limit\" => 180,\n        \"fees_maker\" => Any[\n            Any[0, 0.16],\n            Any[50000, 0.14],\n            Any[100000, 0.12],\n            Any[250000, 0.1],\n            Any[500000, 0.08],\n            Any[1000000, 0.06],\n            Any[2500000, 0.04],\n            Any[5000000, 0.02],\n            Any[10000000, 0.0],\n            Any[100000000, 0.0]\n        ],\n        \"ordermin\" => \"0.0001\",\n        \"aclass_base\" => \"currency\",\n        \"fee_volume_currency\" => \"ZUSD\",\n        \"status\" => \"online\",\n        \"altname\" => \"XBTUSD\",\n        \"aclass_quote\" => \"currency\",\n        \"margin_stop\" => 40,\n        \"fees\" => Any[\n            Any[0, 0.26],\n            Any[50000, 0.24],\n            Any[100000, 0.22],\n            Any[250000, 0.2],\n            Any[500000, 0.18],\n            Any[1000000, 0.16],\n            Any[2500000, 0.14],\n            Any[5000000, 0.12],\n            Any[10000000, 0.1],\n            Any[100000000, 0.08]\n        ],\n        \"quote\" => \"ZUSD\",\n        \"base\" => \"XXBT\",\n        \"lot\" => \"unit\",\n        \"pair_decimals\" => 1,\n        \"wsname\" => \"XBT/USD\",\n        \"costmin\" => \"0.5\",\n        \"tick_size\" => \"0.1\",\n        \"lot_decimals\" => 8,\n        \"leverage_buy\" => Any[2, 3, 4, 5]\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"","category":"page"},{"location":"spot/spot/#User","page":"Kraken Spot REST API","title":"User","text":"","category":"section"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"Modules = [KrakenEx, KrakenEx.SpotUserModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"spot/spot/#KrakenEx.SpotUserModule","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule","text":"SpotUserModule\n\nEnables accessing Spot user endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"spot/spot/#KrakenEx.SpotUserModule.create_subaccount-Tuple{SpotBaseRESTAPI, String, String}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.create_subaccount","text":"create_subaccount(client::SpotBaseRESTAPI, username::String, email::String)\n\nKraken Docs: https://docs.kraken.com/rest/#tag/User-Subaccounts\n\nCreate a subaccount for trading. This is currently only available for institutional clients.\n\nAuthenticated client required\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.delete_export_report-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.delete_export_report","text":"delete_export_report(client::SpotBaseRESTAPI; id::String, type::String)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/removeExport\n\nRemoves an export by id from the system.\n\nAuthenticated client required\n\nAttributes\n\ntype – must be one of [\"delete\", \"cancel\"]\n\n...\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(delete_export_report(client, type=\"delete\", id=\"PFEZ))\nDict{String, Any}(\"delete\" => true)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_account_balance-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_account_balance","text":"get_account_balance(client::SpotBaseRESTAPI)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getAccountBalance\n\nReturns the actual balances of all currencies.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_account_balance(client))\nDict{String, Any}(\n    \"KFEE\" => \"9431.54\",\n    \"BCH\" => \"123.0000077100\",\n    \"ZUSD\" => \"798.5491\",\n    \"XETH\" => \"14.0119368320\",\n    \"DOT\" => \"671.0153183000\",\n    \"ZEUR\" => \"101.12000\",\n    \"XXBT\" => \"1.0011888110\",\n    \"XXLM\" => \"2030121.00001212\",\n    \"EOS\" => \"24.0000065500\",\n    \"TRX\" => \"9121230.00000000\"\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_closed_orders-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_closed_orders","text":"get_closed_orders(client::SpotBaseRESTAPI;\n    trades::Bool=false,\n    userref::Union{Int64,Nothing}=nothing,\n    start::Union{Int64,Nothing}=nothing,\n    end_::Union{Int64,Nothing}=nothing,\n    ofs::Union{Int64,String,Nothing}=nothing,\n    closetime::String=\"both\"\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getClosedOrders\n\nReturns information about the closed orders.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_closed_orders(client))\nDict{String, Any}(\n    \"closed\" => Dict{String, Any}(\n        \"OLGRP5-M42MC-YOFF7T\" => Dict{String, Any}(\n            \"price\" => \"0.00000\",\n            \"vol\" => \"40.36280000\",\n            \"status\" => \"canceled\",\n            \"vol_exec\" => \"0.00000000\",\n            \"oflags\" => \"fciq\",\n            \"reason\" => \"User requested\",\n            \"starttm\" => 0,\n            \"stopprice\" => \"0.00000\",\n            \"refid\" => nothing,\n            \"userref\" => 0,\n            \"expiretm\" => 0,\n            \"cost\" => \"0.00000\",\n            \"fee\" => \"0.00000\",\n            \"misc\" => \"\",\n            \"limitprice\" => \"0.00000\",\n            \"opentm\" => 1.6730201392732968e9,\n            \"descr\" => Dict{String, Any}(\n                \"ordertype\" => \"limit\",\n                \"price\" => \"40.5842\",\n                \"pair\" => \"DOTUSD\",\n                \"order\" => \"buy 40.36280000 DOTUSD @ limit 4.5842\",\n                \"leverage\" => \"none\",\n                \"type\" => \"buy\",\n                \"close\" => \"\",\n                \"price2\" => \"0\"\n            ),\n            \"closetm\" => 1.673225209430317e9\n        ),\n        \"OUSQ7U-2TP3Q-PBKOIP\" => Dict{String, Any}(\n            ...\n        )\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_export_report_status-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_export_report_status","text":"get_export_report_status(client::SpotBaseRESTAPI; report::String)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/exportStatus\n\nReturns information about the current export status.\n\nAuthenticated client required\n\nAttributes\n\nreport – must be one of [\"trades\", \"ledgers\"]\n\n...\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_export_report_status(client, report=\"ledgers\"))\nAny[Dict{String, Any}(\n    \"report\" => \"ledgers\",\n    \"fields\" => \"all\",\n    \"aclass\" => \"currency\",\n    \"endtm\" => \"1673368394\",\n    \"createdtm\" => \"1673368394\",\n    \"format\" => \"CSV\",\n    \"status\" => \"Queued\",\n    \"id\" => \"OFEZ\",\n    \"subtype\" => \"all\",\n    \"starttm\" => \"1672531200\",\n    \"dataendtm\" => \"1673368394\",\n    \"completedtm\" => \"0\",\n    \"datastarttm\" => \"1672531200\",\n    \"expiretm\" => \"1674577994\",\n    \"flags\" => \"0\",\n    \"asset\" => \"all\",\n    \"descr\" => \"myLedgersExport\"\n)]\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_ledgers-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_ledgers","text":"get_ledgers(client::SpotBaseRESTAPI; id::Union{String,Vector{String}}, trades::Bool=false)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getLedgersInfo\n\nReturns information about specific ledergs by id.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_ledgers(client, id=\"LNYQGU-SUR5U-UXTOWM\"))\nDict{String, Any}(\n    \"LNYQGU-SUR5U-UXTOWM\" => Dict{String, Any}(\n        \"amount\" => \"2001.0000\",\n        \"balance\" => \"2001.0082\",\n        \"fee\" => \"0.0000\",\n        \"time\" => 1.668681189483613e9,\n        \"aclass\" => \"currency\",\n        \"asset\" => \"EUR\",\n        \"subtype\" => \"\",\n        \"refid\" => \"QYSCWYA-S54CSU-RDHRV3\",\n        \"type\" => \"deposit\"\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_ledgers_info-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_ledgers_info","text":"get_ledgers_info(client::SpotBaseRESTAPI;\n    asset::Union{String,Vector{String}}=\"all\",\n    aclass::String=\"currency\",\n    type::String=\"all\",\n    start::Union{Int64,Nothing}=nothing,\n    end_::Union{Int64,Nothing}=nothing,\n    ofs::Union{Int64,String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getLedgers\n\nReturns information about the current ledergs.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_ledgers_info(client))\nDict{String, Any}(\n    \"count\" => 1068,\n    \"ledger\" => Dict{String, Any}(\n        \"LWSAYQ-GD2N2-IM3I6O\" => Dict{String, Any}(\n            \"amount\" => \"0.00\",\n            \"balance\" => \"9437.94\",\n            \"fee\" => \"6.43\",\n            \"time\" => 1.6732795570751212e9,\n            \"aclass\" => \"currency\",\n            \"asset\" => \"KFEE\",\n            \"subtype\" => \"\",\n            \"refid\" => \"TYQEFQ-NYADC-R4LII6\",\n            \"type\" => \"trade\"\n        ),\n        \"LP6VNL-HDXPP-JLVG73\" => Dict{String, Any}(\n            \"amount\" => \"-0.0300000000\",\n            \"balance\" => \"0.0119368320\",\n            \"fee\" => \"0.0000000000\",\n            \"time\" => 1.6732795570750895e9,\n            \"aclass\" => \"currency\",\n            \"asset\" => \"XETH\",\n            \"subtype\" => \"\",\n            \"refid\" => \"TYQEFQ-NYADC-R4LII6\",\n            \"type\" => \"trade\"\n        ), ....\n    )\n)\n\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_open_orders-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_open_orders","text":"get_open_orders(client::SpotBaseRESTAPI; trades::Bool=false, userref::Union{Int64,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getOpenOrders\n\nRetrurns the actual open orders.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_open_orders(client))\nDict{String, Any}(\n    \"open\" => Dict{String, Any}(\n        \"OAQZLS-7SFKK-PAA6BW\" => Dict{String, Any}(\n            \"price\" => \"0.00000\",\n            \"vol\" => \"20.11513967\",\n            \"status\" => \"open\",\n            \"vol_exec\" => \"0.00000000\",\n            \"oflags\" => \"fciq\",\n            \"starttm\" => 0,\n            \"stopprice\" => \"0.00000\",\n            \"refid\" => nothing,\n            \"userref\" => 0,\n            \"expiretm\" => 0,\n            \"cost\" => \"0.00000\",\n            \"fee\" => \"0.00000\",\n            \"misc\" => \"\",\n            \"limitprice\" => \"0.00000\",\n            \"opentm\" => 1.6678760796400564e9,\n            \"descr\" => Dict{String, Any}(\n                \"ordertype\" => \"limit\",\n                \"price\" => \"7.1288\",\n                \"pair\" => \"DOTUSD\",\n                \"order\" => \"sell 20.11513967 DOTUSD @ limit 7.1288\",\n                \"leverage\" => \"none\",\n                \"type\" => \"sell\",\n                \"close\" => \"\",\n                \"price2\" => \"0\"\n            )\n        ),\n        \"OPNPFB-NRZY3-O6T46Y\" => Dict{String, Any}(\n            \"price\" => \"0.00000\",\n            ...\n        )\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_open_positions-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_open_positions","text":"get_open_positions(client::SpotBaseRESTAPI;\n    txid::Union{String,Vector{String},Nothing}=nothing,\n    docalcs::Bool=false,\n    consolidation::String=\"market\"\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getOpenPositions\n\nReturns a list of open Margin positions.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_open_positions(client))\nDict{String,Any}(\n    \"ZBR4YTU-ND7TDJ-OZ8LR\" => Dict{String,Any}(\n        \"ordertxid\" => \"03YHGT-P82PNP-D9DY85\",\n        \"posstatus\" => \"open\",\n        \"pair\" => \"XXBTZUSD\",\n        \"time\" => 1605280097.8294,\n        \"type\" => \"buy\",\n        \"ordertype\" => \"limit\",\n        \"cost\" => \"104610.52842\",\n        \"fee\" => \"289.06565\",\n        \"vol\" => \"8.82412861\",\n        \"vol_closed\" => \"0.20200000\",\n        \"margin\" => \"20922.10568\",\n        \"value\" => \"258797.5\",\n        \"net\" => \"+154186.9728\",\n        \"terms\" => \"0.0100% per 4 hours\",\n        \"rollovertm\" => \"1616672637\",\n        \"misc\" => \"\",\n        \"oflags\" => \"\"\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_orders_info-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_orders_info","text":"get_orders_info(client::SpotBaseRESTAPI;\n    txid::Union{String,Vector{String}},\n    trades::Bool=false,\n    userref::Union{Int64,Nothing}=nothing,\n    consolidate_taker::Bool=true,\n)\n\nKraken Docs: https://docs.kraken.com/rest/#tag/User-Data/operation/getOrdersInfo\n\nReturns information about a specific order by txid.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_orders_info(client, txid=\"OLGRP5-M42MC-YOFF7T\"))\nDict{String, Any}\n    \"OLGRP5-M42MC-YOFF7T\" => Dict{String, Any}(\n        \"price\" => \"0.00000\",\n        \"vol\" => \"40.36280000\",\n        \"status\" => \"canceled\",\n        \"vol_exec\" => \"0.00000000\",\n        \"oflags\" => \"fciq\",\n        \"reason\" => \"User requested\",\n        \"starttm\" => 0,\n        \"stopprice\" => \"0.00000\",\n        \"refid\" => nothing,\n        \"userref\" => 0,\n        \"expiretm\" => 0,\n        \"cost\" => \"0.00000\",\n        \"fee\" => \"0.00000\",\n        \"misc\" => \"\",\n        \"limitprice\" => \"0.00000\",\n        \"opentm\" => 1.6730201392732968e9,\n        \"descr\" => Dict{String, Any}(\n            \"ordertype\" => \"limit\",\n            \"price\" => \"40.5842\",\n            \"pair\" => \"DOTUSD\",\n            \"order\" => \"buy 40.36280000 DOTUSD @ limit 4.5842\",\n            \"leverage\" => \"none\",\n            \"type\" => \"buy\",\n            \"close\" => \"\",\n            \"price2\" => \"0\"\n        ),\n        \"closetm\" => 1.673225209430317e9\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_trade_balance-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_trade_balance","text":"get_trade_balance(client::SpotBaseRESTAPI; asset::Union{String,Nothing}=nothing)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getTradeBalance\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_trade_balance(client))\nDict{String, Any}(\n    \"v\" => \"0.0000\",\n    \"tb\" => \"113145.4781\",\n    \"mf\" => \"113145.4781\",\n    \"uv\" => \"0.0000\",\n    \"m\" => \"0.0000\",\n    \"c\" => \"0.0000\",\n    \"e\" => \"113112.4781\",\n    \"eb\" => \"116412.4143\",\n    \"n\" => \"0.0000\"\n)\njulia> println(get_trade_balance(client, asset=\"DOT\"))\nDict{String, Any}(\n    \"v\" => \"0.0000000000\",\n    \"tb\" => \"2301.0859297648\",\n    \"mf\" => \"2301.0859297648\",\n    \"uv\" => \"0.0000000000\",\n    \"m\" => \"0.0000000000\",\n    \"c\" => \"0.0000000000\",\n    \"e\" => \"2301.0859297648\",\n    \"eb\" => \"2367.7876343538\",\n    \"n\" => \"0.0000000000\"\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_trade_volume-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_trade_volume","text":"get_trade_volume(client::SpotBaseRESTAPI; pair::Union{String,Vector{String},Nothing}=nothing, fee_info::Bool=true)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getTradeVolume\n\nReturns the actual 30-day trading volume. Authenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_trade_volume(client))\nDict{String, Any}(\n    \"currency\" => \"ZUSD\",\n    \"volume\" => \"204212.9762\",\n    \"fees_maker\" => nothing,\n    \"fees\" => nothing\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_trades_history-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_trades_history","text":"get_trades_history(client::SpotBaseRESTAPI;\n    type::String=\"all\",\n    trades::Bool=false,\n    start::Union{Int64,Nothing}=nothing,\n    end_::Union{Int64,Nothing}=nothing,\n    ofs::Union{String,Int64,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getTradeHistory\n\nReturns historical trades and information.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_trades_history(client, type=\"all\", start=1668431675, trades=true))\nDict{String, Any}(\n    \"count\" => 182,\n    \"trades\" => Dict{String, Any}(\n        \"TRZUTT-EZZ7C-NYDTL3\" => Dict{String, Any}(\n            \"price\" => \"4.29780\",\n            \"time\" => 1.6722627506350572e9,\n            \"ordertxid\" => \"OGFLW2-CZKU3-XKCBMB\",\n            \"trade_id\" => 8737419,\n            \"vol\" => \"46.5350000\",\n            \"pair\" => \"DOTUSD\",\n            \"postxid\" => \"TKH2SE-M7IF5-CFI7LT\",\n            \"ordertype\" => \"limit\",\n            \"cost\" => \"199.9981\",\n            \"fee\" => \"0.3200\",\n            \"misc\" => \"\",\n            \"leverage\" => \"0\",\n            \"margin\" => \"0.00000\",\n            \"type\" => \"buy\"\n        ), \"TNJFKJ-YLYX7-ETYS66\" => Dict{String, Any}(\n            ...\n        )\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_trades_info-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_trades_info","text":"get_trades_info(client::SpotBaseRESTAPI; txid::Union{String,Vector{String}}, trades::Bool=false)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getTradesInfo\n\nReturns information about specific trades by txid.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_trades_info(private_client, txid=\"2QMIXRF-I0EXWP-WQ6459\"))\nDict{String,Any)(\n    \"2QMIXRF-I0EXWP-WQ6459\" => Dict{String,Any}(\n        \"ordertxid\" => \"OQCLML-BW3P3-BUCMWZ\",\n        \"postxid\" => \"0H90AJ-M4W3ZY-66GF8Y\",\n        \"pair\" => \"XXBTZUSD\",\n        \"time\" => 1616667796.8802,\n        \"type\" => \"buy\",\n        \"ordertype\" => \"limit\",\n        \"price\" => \"30010.00000\",\n        \"cost\" => \"600.20000\",\n        \"fee\" => \"0.00000\",\n        \"vol\" => \"0.02000000\",\n        \"margin\" => \"0.00000\",\n        \"misc\" => \"\"\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.get_websockets_token-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.get_websockets_token","text":"get_websockets_token(client::SpotBaseRESTAPI)\n\nKraken Docs: https://docs.kraken.com/rest/#tag/Websockets-Authentication\n\nReturns the websocket token. This is used by the when managing private websocket feeds and subscriptions.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_websockets_token(client))\nDict{String,Any}(\n    \"token\": \"1Agc3liasQPoAkAkadohsSNMFhs1ende06d1von3YFEMq\",\n    \"expires\": 900\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.request_export_report-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.request_export_report","text":"request_export_report(client::SpotBaseRESTAPI;\n    report::String,\n    description::String,\n    format::String=\"CSV\",\n    fields::String=\"all\",\n    starttm::Union{Int64,Nothing}=nothing,\n    endtm::Union{Int64,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/addExport\n\nInitiates the export of a report and returns the export-id.\n\nAuthenticated client required\n\nAttributes\n\nreport – must be one of [\"trades\", \"ledgers\"]\n\n...\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(request_export_report(\n...        client,\n...        report=\"ledgers\",\n...        description=\"myLedgersExport\",\n...        format=\"CSV\"\n...    )\nDict{String, Any}(\"id\" => \"OFEZ\")\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotUserModule.retrieve_export-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotUserModule.retrieve_export","text":"retrieve_export(client::SpotBaseRESTAPI; id::String)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/retrieveExport\n\nRetrieves the initiated exprort. Can be used to save this report to csv.\n\nAuthenticated client required\n\nThe id is obtained when requesting the report using request_export_report.\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> report = retrieve_export(private_client, id=\"OFEZ\")\njulia> open(\"myExport.zip\", \"w\") do io\n...        write(io, report)\n...    end\n\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"","category":"page"},{"location":"spot/spot/#Trade","page":"Kraken Spot REST API","title":"Trade","text":"","category":"section"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"Modules = [KrakenEx.SpotTradeModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"spot/spot/#KrakenEx.SpotTradeModule","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule","text":"SpotTradeModule\n\nEnables accessing Spot trade endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"spot/spot/#KrakenEx.SpotTradeModule.cancel_all_orders-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule.cancel_all_orders","text":"cancel_all_orders(client::SpotBaseRESTAPI)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/cancelAllOrders\n\nCancel all open orders.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(cancel_all_orders(client))\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotTradeModule.cancel_all_orders_after_x-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule.cancel_all_orders_after_x","text":"cancel_all_orders_after_x(client::SpotBaseRESTAPI; timeout::Int)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/cancelAllOrdersAfter\n\nCancel all open orders after timeout seconds. This can be used to avoid unwanted behavior in case of system instabilities. Set timeout to 0 to reset the timout.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(cancel_all_orders_after_x(client, timeout=60))\nDict{String, Any}(\n    \"currentTime\" => \"2023-01-10T17:01:57Z\",\n    \"triggerTime\" => \"2023-01-10T17:02:57Z\"\n)\njulia> println(cancel_all_orders_after_x(client, timeout=0))\nDict{String, Any}(\n    \"currentTime\" => \"2023-01-10T17:01:59Z\",\n    \"triggerTime\" => \"0\"\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotTradeModule.cancel_order-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule.cancel_order","text":"cancel_order(client::SpotBaseRESTAPI; txid::String)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/cancelOrder\n\nCancel an order by txid.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(cancel_order(client, txid=\"O2JLFP-VYFIW-35ZAAE\"))\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotTradeModule.cancel_order_batch-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule.cancel_order_batch","text":"cancel_order_batch(client::SpotBaseRESTAPI; orders::Vector{String})\n\nKraken Docs: https://docs.kraken.com/rest/#operation/cancelOrderBatch\n\nEnables the cancellation of multiple orders by txid.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(cancel_order_batch(\n...        client,\n...        orders=[\n...            \"O2JLFP-VYFIW-35ZAAE\", \"O523KJ-DO4M2-KAT243\",\n...            \"OCDIAL-YC66C-DOF7HS\", \"OVFPZ2-DA2GV-VBFVVI\"\n...        ]\n...    ))\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotTradeModule.create_order-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule.create_order","text":"create_order(client::SpotBaseRESTAPI;\n    ordertype::String,\n    side::String,\n    pair::String,\n    volume::Union{Float64,Int,String},\n    price::Union{Float64,Int,String,Nothing}=nothing,\n    price2::Union{Float64,Int,String,Nothing}=nothing,\n    trigger::Union{String,Nothing}=nothing,\n    leverage::Union{Float64,Int,String,Nothing}=nothing,\n    stp_type::String=\"cancel-newest\",\n    oflags::Union{String,Vector{String},Nothing}=nothing,\n    timeinforce::Union{String,Nothing}=nothing,\n    starttm::String=\"0\",\n    expiretim::String=\"0\",\n    close_ordertype::Union{String,Nothing}=nothing,\n    close_price::Union{String,Nothing}=nothing,\n    close_price2::Union{String,Nothing}=nothing,\n    deadline::Union{String,Nothing}=nothing,\n    validate::Bool=false,\n    reduce_only::Bool=false,\n    displayvol::Union{Float64,Int,String,Nothing}=nothing,\n    userref::Union{Int32,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/addOrder\n\nEnables the Spot trading mechanism. Various parameters can be specified for an individual trading preference.\n\nAuthenticated client required\n\nArguments\n\nvalidate::Bool=false – Simulates order placement if set to true\n\n...\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(\n...        create_order(\n...            private_client,\n...            ordertype=\"limit\",\n...            side=\"buy\",\n...            volume=0.3,\n...            pair=\"XBTUSD\",\n...            price=\"17000\",\n...            oflags=\"post\"\n...        )\n...    )\nDict{String,Any}(\n    \"descr\" => Dict{String,Any}(\n        \"order\" => \"buy 0.30000000 XBTUSD @ limit 17000.0\",\n    ),\n    \"txid\" => [\"0ZH90J-M4W3ZY-66GF8Y\"]\n)\njulia> println(\n...        create_order(\n...            private_client,\n...            ordertype=\"market\",\n...            side=\"buy\",\n...            volume=0.001,\n...            pair=\"XBTUSD\",\n...            validate=true\n...        )\n...    )\nDict{String,Any}(\n    \"descr\" => Dict{String,Any}(\n        \"order\" => \"buy 0.00100000 XBTUSD @ market\",\n    ),\n    \"txid\" => [\"T4HSG14-TYRCOC-7SWPQ0\"]\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotTradeModule.create_order_batch-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule.create_order_batch","text":"create_order_batch(client::SpotBaseRESTAPI;\n    orders::Vector{Dict{String,Any}},\n    pair::String,\n    deadline::Union{String,Nothing}=nothing,\n    validate::Bool=false\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/addOrderBatch\n\nEnables placing multiple orders and order-specific actions at once.\n\nAuthenticated client required\n\nThe validate key can be submitted to orders to simulate the result (see create_order).\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(\n...        create_order_batch(\n...            client,\n...            orders=[\n...                Dict{String,Any}(\n...                    \"close\" => Dict{String,Any}(\n...                        \"ordertype\" => \"stop-loss-limit\",\n...                       \"price\" => 1000,\n...                       \"price2\" => 900\n...                   ),\n...                   \"ordertype\" => \"limit\",\n...                   \"price\" => 40000,\n...                   \"timeinforce\" => \"GTC\",\n...                   \"type\" => \"buy\",\n...                   \"userref\" => Int32(123),\n...                   \"volume\" => 2\n...                ),\n...                Dict{String,Any}(\n...                    \"ordertype\" => \"limit\",\n...                    \"price\" => 42000,\n...                    \"starttm\" => \"1668455555\",\n...                    \"timeinforce\" => \"GTC\",\n...                    \"type\" => \"sell\",\n...                    \"userref\" => Int32(999),\n...                    \"volume\" => 5\n...                ),\n...                Dict{String,Any}(\n...                    \"ordertype\" => \"market\",\n...                    \"volume\" => 2,\n...                    \"type\" => \"buy\"\n...                ),\n...                Dict{String,Any}(\n...                    \"ordertype\" => \"limit\",\n...                    \"price\" => 43000,\n...                    \"starttm\" => \"1668455555\",\n...                    \"timeinforce\" => \"GTC\",\n...                    \"type\" => \"sell\",\n...                    \"userref\" => Int32(999),\n...                    \"volume\" => 5\n...                )\n...            ],\n...            pair=\"XBTUSD\",\n...        )\n...    )\n...)\nDict{String, Any}(\n    \"orders\" => Any[\n        Dict{String, Any}(\n            \"descr\" => Dict{String, Any}(\n                \"order\" => \"buy 2.00000000 XBTUSD @ limit 40000.0\",\n                \"close\" => \"close position @ stop loss 1000.0 -> limit 900.0\",\n                \"txid\" => \"N5F2Y6-E898J5-8Y6QE0\"\n            )\n        ),\n        Dict{String, Any}(\n            \"descr\" => Dict{String, Any}(\n                \"order\" => \"sell 5.00000000 XBTUSD @ limit 42000.0\",\n                \"txid\" => \"3YHGOT-P82PNP-D9DY85\"\n            )\n        ),\n        Dict{String, Any}(\n            \"descr\" => Dict{String, Any}(\n                \"order\" => \"buy 2.00000000 XBTUSD @ market\",\n                \"txid\" => \"IZXJ1O-9HER70-XJ0PCD\"\n            )\n        ),\n        Dict{String, Any}(\n            \"descr\" => Dict{String, Any}(\n                \"order\" => \"sell 5.00000000 XBTUSD @ limit 43000.0\",\n                \"txid\" => \"3YHGOT-P82PNP-D9DY85\"\n            )\n        )\n    ]\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotTradeModule.edit_order-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotTradeModule.edit_order","text":"edit_order(client::SpotBaseRESTAPI;\n    txid::String,\n    pair::String,\n    volume::Union{String,Int,Float64,Nothing}=nothing,\n    price::Union{String,Int,Float64,Nothing}=nothing,\n    price2::Union{String,Int,Float64,Nothing}=nothing,\n    oflags::Union{String,Vector{String},Nothing}=nothing,\n    deadline::Union{String,Nothing}=nothing,\n    cancel_response::Bool=false,\n    validate::Bool=false,\n    userref::Union{Int32,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/editOrder\n\nEnables the editing of a placed order by txid.\n\nAuthenticated client required\n\nArguments\n\nvalidate::Bool=false – Simulates order placement if set to true ...\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(\n...        edit_order(\n...            client,\n...            txid=\"O2JLFP-VYFIW-35ZAAE\",\n...            pair=\"XBTUSD\",\n...            volume=4.2,\n...            price=17000\n...        )\n...    )\nDict{String, Any}(\n    \"status\" => \"ok\",\n    \"originaltxid\" => \"O2JLFP-VYFIW-35ZAAE\",\n    \"orders_cancelled\" => 0,\n    \"descr\" => Dict{String, Any}(\"order\" => \"Order edited\")\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"","category":"page"},{"location":"spot/spot/#Funding","page":"Kraken Spot REST API","title":"Funding","text":"","category":"section"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"Modules = [KrakenEx.SpotFundingModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"spot/spot/#KrakenEx.SpotFundingModule","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule","text":"SpotFundingModule\n\nEnables accessing Spot funding endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.cancel_withdraw-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.cancel_withdraw","text":"cancel_withdraw(client::SpotBaseRESTAPI; asset::String, refid::String)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/cancelWithdrawal\n\nCancels a withdrawal by refid. The refid returned by withdraw_funds when initiating a withdraw. Authenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> cancel_withdraw(client, asset=\"DOT\", refid=\"VGBNO6T-KFPTAQ-LAKGA6\")\ntrue\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.get_deposit_address-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.get_deposit_address","text":"get_deposit_address(\n    client::SpotBaseRESTAPI;\n    asset::String,\n    method::String,\n    new::Bool=false\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getDepositAddresses\n\nReturns the available deposit adresses of a given asset (symbol/currency pair).\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_deposit_address(client, asset=\"DOT\", method=\"Polkadot\"))\nAny[\n    Dict{String, Any}(\n        \"new\" => true,\n        \"expiretm\" => \"0\",\n        \"address\" => \"14MvdTudtJppS4WrUXg5mQiQiq6baUXt3KwhxxEDXnB7nMYv\"\n    ), Dict{String, Any}(\n        \"new\" => true,\n        \"expiretm\" => \"0\",\n        \"address\" => \"15mK6NDReFAxkP6menxPRZdGNzRJY31vDMe9uSUPWfZj64Vy\"\n    ), ...\n]\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.get_deposit_methods-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.get_deposit_methods","text":"get_deposit_methods(client::SpotBaseRESTAPI; asset::String)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getDepositMethods\n\nReturns the available deposit methods for a given asset (symbol/currency pair).\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> get_deposit_methods(client, asset=\"DOT\")\nAny[Dict{String, Any}(\n    \"gen-address\" => true,\n    \"method\" =>\n    \"Polkadot\",\n    \"limit\" => false\n)]\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.get_recent_deposits_status-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.get_recent_deposits_status","text":"get_recent_deposits_status(\n    client::SpotBaseRESTAPI;\n    asset::Union{String,Nothing}=Nothing,\n    method::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getStatusRecentDeposits\n\nReturns the status of the recent deposit.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(\n...        get_recent_deposits_status(\n...             client, asset=\"DOT\", method=\"Polkadot\"\n...        )\n...    )\nAny[]\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.get_recent_withdraw_status-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.get_recent_withdraw_status","text":"get_recent_withdraw_status(\n    client::SpotBaseRESTAPI;\n    asset::String,\n    method::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getStatusRecentWithdrawals\n\nReturns information about the recent withdrawal.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_recent_withdraw_status(client, asset=\"DOT\"))\nDict{String,Any}(\n    \"method\": =>\"Bitcoin\",\n    \"aclass\" => \"currency\",\n    \"asset\" => \"XXBT\",\n    \"refid\" => \"AGBZNBO-5P2XSB-RFVF6J\",\n    \"txid\" => \"THVRQM-33VKH-UCI7BS\",\n    \"info\" => \"mzp6yUVMRxfasyfwzTZjjy38dHqMX7Z3GR\",\n    \"amount\" => \"0.72485000\",\n    \"fee\" => \"0.00015000\",\n    \"time\" => 1617014586,\n    \"status\" => \"Pending\"\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.get_withdrawal_info-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.get_withdrawal_info","text":"get_withdrawal_info(\n    client::SpotBaseRESTAPI;\n    asset::String,\n    key::String,\n    amount::Union{Float64,Int64,String}\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getWithdrawalInformation\n\nReturns information about a specific withdrawal. The key can be the refid returned by withdraw_funds.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_withdrawal_info(\n...        client,\n...        asset=\"DOT\",\n...        key=\"pwallet1\",\n...        amount=\"200\"\n...    ))\n)\nDict{String,Any}(\n    \"method\" => \"Bitcoin\",\n    \"limit\" => \"332.00956139\",\n    \"amount\" => \"0.72485000\",\n    \"fee\" => \"0.00015000\"\n)\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.wallet_transfer-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.wallet_transfer","text":"wallet_transfer(\n    client::SpotBaseRESTAPI;\n    asset::String,\n    from::String,\n    to::String,\n    amount::Union{Float64,Int64,String}\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/walletTransfer\n\nEnables the transfer of assets between different wallets e.g. from Spot to Futures wallet.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(wallet_transfer(\n...        client,\n...        asset=\"XLM\",\n...        from=\"Spot Wallet\",\n...        to=\"Futures Wallet\",\n...        amount=200\n...    ))\nDict{String,Any}(\"refid\" => \"AJGLAE5-KSKMGR4-VPNPNV\")\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotFundingModule.withdraw_funds-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotFundingModule.withdraw_funds","text":"withdraw_funds(\n    client::SpotBaseRESTAPI;\n    asset::String,\n    key::String,\n    amount::Union{Float64,Int64,String}\n)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/withdrawFunds\n\nInitiates a withdraw and returns the refid to track the status.\n\nAuthenticated client required\n\nNote: The key must be the name of the withdraw wallet as defined in the Web UI of the Kraken exchange.\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(withdraw_funds(\n...         client,\n...         asset=\"DOT\",\n...         key=\"some-widthdrawal-id-from-gui\",\n...         amount=200\n...     ))\nDict{String,Any}(\"refid\" => \"AGBSO6T-UFMTTQ-I7KGS6\")\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"","category":"page"},{"location":"spot/spot/#Staking","page":"Kraken Spot REST API","title":"Staking","text":"","category":"section"},{"location":"spot/spot/","page":"Kraken Spot REST API","title":"Kraken Spot REST API","text":"Modules = [KrakenEx.SpotStakingModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"spot/spot/#KrakenEx.SpotStakingModule","page":"Kraken Spot REST API","title":"KrakenEx.SpotStakingModule","text":"SpotStakingModule\n\nEnables accessing Spot staking endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"spot/spot/#KrakenEx.SpotStakingModule.get_pending_staking_transactions-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotStakingModule.get_pending_staking_transactions","text":"get_pending_staking_transactions(client::SpotBaseRESTAPI)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getStakingPendingDeposits\n\nReturns a list of pending staking transactions of this user.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_pending_staking_transactions(client))\nAny[Dict{String,Any}(\n    \"method\" => \"polkadot-staked\",\n    \"aclass\" => \"currency\",\n    \"asset\" => \"DOT.S\",\n    \"refid\" => \"CN1EVQO-MOWU97-89F1D5\",\n    \"amount\" => \"2010\",\n    \"fee\" => \"0.01\",\n    \"time\" => 1622988877,\n    \"status\" => \"Initial\",\n    \"type\" => \"bonding\"\n), ...]\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotStakingModule.list_stakeable_assets-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotStakingModule.list_stakeable_assets","text":"list_stakeable_assets(client::SpotBaseRESTAPI)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getStakingAssetInfo\n\nLists the available assets to stake.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(list_stakeable_assets(client))\nAny[Dict{String,Any}(\n    \"method\" => \"polkadot-staked\",\n    \"asset\" => \"DOT\",\n    \"staking_asset\": \"DOT.S\",\n    \"rewards\" => Dict{String,ANy}()\n        \"reward\" => \"12.00\",\n        \"type\" => \"percentage\"\n    ),\n    \"on_chain\" => true,\n    \"can_stake\" => true,\n    \"can_unstake\" => true,\n    \"minimum_amount\" => Dict{String,Any}(\n        \"staking\" => \"0.0000000000\",\n        \"unstaking\" => \"0.0000000000\"\n    )\n), ...]\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotStakingModule.list_staking_transactions-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotStakingModule.list_staking_transactions","text":"list_staking_transactions(client::SpotBaseRESTAPI)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/getStakingTransactions\n\nReturns the list of staking transactions for this user.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(list_staking_transactions(client))\nAny[Dict{String,Any}(\n    \"method\" => \"xbt-staked\",\n    \"aclass\" => \"currency\",\n    \"asset\" => \"XBT.M\",\n    \"refid\" => \"2BPOYNJ-Q3P855-5B9BL4\",\n    \"amount\" => \"0.612\",\n    \"fee\" => \"0.0000000000\",\n    \"time\" => 1623132481,\n    \"status\" => \"Success\",\n    \"type\" => \"bonding\",\n    \"bond_start\" => 1623132481,\n    \"bond_end\" => 1623132481\n), ...]\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotStakingModule.stake_asset-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotStakingModule.stake_asset","text":"stake_asset(client::SpotBaseRESTAPI; asset::String, amount::Union{Float64,Int64,String}, method::String)\n\nKraken Docs: https://docs.kraken.com/rest/#operation/stake\n\nInitiates a staking action for a desired asset.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(stake_asset(client, asset=\"DOT\", amount=2000, method=\"polkadot-staked\"))\nDict{String,Any}(\"refid\" => \"ABFPN4-KSKVP4-VPNALT\")\n\n\n\n\n\n","category":"method"},{"location":"spot/spot/#KrakenEx.SpotStakingModule.unstake_asset-Tuple{SpotBaseRESTAPI}","page":"Kraken Spot REST API","title":"KrakenEx.SpotStakingModule.unstake_asset","text":"unstake_asset(client::SpotBaseRESTAPI; asset::String, amount::Union{Float64,Int64,String})\n\nKraken Docs: https://docs.kraken.com/rest/#operation/unstake\n\nEnables the unstaking of a staked asset.\n\nAuthenticated client required\n\nExamples\n\njulia> client = SpotBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(unstake_asset(client, asset=\"DOT\", amount=2000))\nDict{String,Any}(\"refid\" => \"GT01XVK-1VCDWO-7HR18B\")\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"   CurrentModule = KrakenEx","category":"page"},{"location":"futures/futures/#Kraken-Futures-REST-API","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"","category":"section"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"The listed modules and functions allow to access public and private (authenticated) endpoints of the official Kraken Futures API. All functions of these endpoints require a FuturesBaseRESTAPI instance. For accessing private endpoints, valid API keys must be generated either using the official Kraken API or the offical Kraken demo/sandbox environment. Some endpoints may not work using the demo account, other may require a higer tier rank. Please see the official Kraken documentation in the References section for futher information.","category":"page"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"The sample outputs are for illustrative purposes only and may vary depending on the user, request and market behavior.","category":"page"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"Pages = [\"futures.md\"]","category":"page"},{"location":"futures/futures/#FuturesBaseRESTAPI","page":"Kraken Futures REST API","title":"FuturesBaseRESTAPI","text":"","category":"section"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI","category":"page"},{"location":"futures/futures/#KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI","page":"Kraken Futures REST API","title":"KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI","text":"FuturesBaseRESTAPI\n\nType that stores information about the client and can be used to access public and private endpoints of the Kraken API for  Futures trading.\n\nFields\n\nkey  – Kraken Futures API key\nsecret – Kraken Futures Secret key\n\nDefualt:\n\nBASE_URL  – Kraken Futures API base url (default: \"https://futures.kraken.com\")\nDEMO_URL  – Kraken Futures API demo environment url (default: \"https://demo-futures.kraken.com\")\nDEMO  – Switch to use demo environment (default: false)\nTIMEOUT  – Request timeout (default: 10)\nHEADERS  – Default headers (default: [\"User-Agent\" => \"KrakenEx.jl\"])\n\nExamples\n\nFuturesBaseRESTAPI() – default, public client\nFuturesBaseRESTAPI(key=\"the-api-key\", secret=\"the-api-secret-key\") – authenticated client for public and private requests\n\n\n\n\n\n","category":"type"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"","category":"page"},{"location":"futures/futures/#Market","page":"Kraken Futures REST API","title":"Market","text":"","category":"section"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"Modules = [KrakenEx.FuturesMarketModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule","text":"FuturesMarketModule\n\nEnables accessing Futures market endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_execution_events-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_execution_events","text":"get_execution_events(\n    client::FuturesBaseRESTAPI;\n    before::Union{Int,String,Nothing}=nothing,\n    continuation_token::Union{String,Nothing}=nothing,\n    since::Union{Int,String,Nothing}=nothing,\n    sort::Union{String,Nothing}=nothing,\n    tradeable::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-market-history-get-execution-events\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_execution_events(client))\nDict{String, Any}(\n    \"accountUid\" => \"12f9bd01-d65c-4f83-9a3e-bb9464f88a35\",\n    \"elements\" => Any[], \"len\" => 0\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_fee_schedules-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_fee_schedules","text":"get_fee_schedules(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-fee-schedules-get-fee-schedules\n\nReturns the list of maker and taker fees per asset.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_fee_schedules(client))\nDict{String, Any}(\n    \"feeSchedules\" => Any[\n        Dict{String, Any}(\n            \"name\" => \"KF USD Multi-Collateral Fees\",\n            \"tiers\" => Any[\n                Dict{String, Any}(\n                    \"makerFee\" => 0.02,\n                    \"takerFee\" => 0.05,\n                    \"usdVolume\" => 0.0\n                ),\n                Dict{String, Any}(\n                    \"makerFee\" => 0.015,\n                    \"takerFee\" => 0.04,\n                    \"usdVolume\" => 100000.0\n                ),\n                Dict{String, Any}(\n                    \"makerFee\" => 0.0125,\n                    \"takerFee\" => 0.03,\n                    \"usdVolume\" => 1.0e6\n                ), ...\n            ],\n            \"uid\" => \"your-user-id\"\n        )\n    ],\n    \"serverTime\" => \"2023-01-10T17:59:20.057Z\",\n    \"result\" => \"success\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_fee_schedules_vol-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_fee_schedules_vol","text":"get_fee_schedules_vol(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-fee-schedules-get-fee-schedule-volumes\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_fee_schedules_vol(client))\nDict{String, Any}(\n    \"serverTime\" => \"2023-01-10T18:01:27.478Z\",\n    \"volumesByFeeSchedule\" => Dict{String, Any}(\n        \"7fc4d7c0-464f-4029-a9bb-55856d0c5247\" => 0,\n        \"d46c2190-81e3-4370-a333-424f24387829\" => 0\n    ),\n    \"result\" => \"success\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_instruments-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_instruments","text":"get_instruments(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-instrument-details-get-instruments, https://support.kraken.com/hc/en-us/articles/360022635672-Instruments\n\nLists available instruments (tradeable products) and additional information.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_instruments(client))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"instruments\" => Any[Dict{String,Any}(\n        \"symbol\" => \"pi_xbtusd\",\n        \"type\" => \"futures_inverse\",\n        \"underlying\" => \"rr_xbtusd\",\n        \"tickSize\" => 0.5,\n        \"contractSize\" => 1,\n        \"tradeable\" => true,\n        \"minimumTradeSize\" => 1,\n        \"impactMidSize\" => 1,\n        \"maxPositionSize\" => 1000000,\n        \"openingDate\" => \"2022-01-01T00:00:00.000Z\",\n        \"marginLevels\" => Any[\n            Dict{String,Any}(\"contracts\" => 0, \"initialMargin\" => 0.02, \"maintenanceMargin\" => 0.01),\n            Dict{String,Any}(\"contracts\" => 500000, \"initialMargin\" => 0.04, \"maintenanceMargin\" => 0.02)\n            ...\n        ]\n        \"fundingRateCoefficient\" => 8,\n        \"maxRelativeFundingRate\" => 0.001,\n        \"isin\" => \"GB00J62YGL67\",\n        \"contractValueTradePrecision\" => 0,\n        \"postOnly\" => false,\n        \"retailMarginLevels\" => Any[\n            Dict{String,Any}(\"contracts\" => 0, \"initialMargin\" => 0.5, \"maintenanceMargin\" => 0.25)\n        ],\n        \"category\" => \"\",\n        \"tags\" => []\n    ), ...]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_instruments_status-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_instruments_status","text":"get_instruments_status(client::FuturesBaseRESTAPI; instrument::Union{String,Nothing}=nothing)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-instrument-details-get-instrument-status-list, https://docs.futures.kraken.com/#http-api-trading-v3-api-instrument-details-get-instrument-status\n\nReturns the status of given instrument.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_instruments_status(client, instrument=\"PI_XBTUSD\"))\nDict{String, Any}(\n    \"tradeable\" => \"PI_XBTUSD\",\n    \"experiencingDislocation\" => false,\n    \"extremeVolatilityInitialMarginMultiplier\" => 1,\n    \"priceDislocationDirection\" => nothing,\n    \"serverTime\" => \"2023-01-10T18:08:20.613Z\",\n    \"experiencingExtremeVolatility\" => false,\n    \"result\" => \"success\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_leverage_preference-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_leverage_preference","text":"get_leverage_preference(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-multi-collateral-get-the-leverage-setting-for-a-market\n\nShows the user-specific leverage preference.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_leverage_preference(client))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"serverTime\": \"2022-06-28T15:01:12.762Z\",\n    \"leveragePreferences\": Any[Dict{String,Any}(\n        \"symbol\" => \"PF_XBTUSD\",\n        \"maxLeverage\" => 10.0\n    )]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_ohlc-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_ohlc","text":"get_ohlc(client::FuturesBaseRESTAPI;\n    tick_type::String,\n    symbol::String,\n    resolution::Int64,\n    from::Union{Int64,Nothing}=nothing,\n    to::Union{Int64,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-charts-ohlc-get-ohlc, https://support.kraken.com/hc/en-us/articles/4403284627220-OHLC\n\nAuthenticated client not required\n\nArguments\n\nsymbol::String: asset of interest\ntick_type::String: must be one of [\"spot\", \"mark\", \"trade\"]\nresolution::String: must be one of [\"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"4h\", \"12h\", \"1d\", \"1w\"]\nfrom::Union{Int64,Nothing}=nothing: timestamp of ohlc begin\nto::Union{Int64,Nothing}=nothing: timestamp of ohlc end\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_ohlc(client,\n...        tick_type=\"trade\",\n...        symbol=\"PI_XBTUSD\",\n...        resolution=\"1m\",\n...        from=1668989233,\n...        to=1668999233\n...    ))\nDict{String, Any}(\n    \"more_candles\" => true,\n    \"candles\" => Any[\n        Dict{String, Any}(\n            \"high\" => \"16152.50000000000\",\n            \"volume\" => 7674,\n            \"time\" => 1668989280000,\n            \"open\" => \"16100.00000000000\",\n            \"low\" => \"16100.00000000000\",\n            \"close\" => \"16144.50000000000\"\n        ),\n        Dict{String, Any}(\n            \"high\" => \"16159.00000000000\",\n            \"volume\" => 483, \"time\" => 1668989340000,\n            \"open\" => \"16144.50000000000\",\n            \"low\" => \"16144.50000000000\",\n            \"close\" => \"16144.50000000000\"\n        ), ...\n    ]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_order_events-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_order_events","text":"get_order_events(\n    client::FuturesBaseRESTAPI;\n    before::Union{Int,String,Nothing}=nothing,\n    continuation_token::Union{String,Nothing}=nothing,\n    since::Union{Int,String,Nothing}=nothing,\n    sort::Union{String,Nothing}=nothing,\n    tradeable::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-market-history-get-order-events\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_order_events(\n...        client,\n...        tradeable=\"PI_XBTUSD\",\n...        sort=\"asc\",\n...        before=\"1668989233\"\n...    ))\nDict{String, Any}(\n    \"accountUid\" => \"72f9bd80-d65c-4f73-9a3e-cb9464e88c35\",\n    \"elements\" => Any[\n        Dict{String, Any}(\n            \"event\" => Dict{String, Any}(\n                \"OrderRejected\" => Dict{String, Any}(\n                    \"algoId\" => \"\",\n                    \"order\" => Dict{String, Any}(\n                        \"tradeable\" => \"PI_XBTUSD\",\n                        \"lastUpdateTimestamp\" => 1669116246449,\n                        \"filled\" => \"0\",\n                        \"clientId\" => \"my_another_client_id\",\n                        \"quantity\" => \"1\",\n                        \"reduceOnly\" => false,\n                        \"uid\" => \"d124183a-8c25-421b-8c75-450fb0b0efd3\",\n                        \"direction\" => \"Buy\",\n                        \"orderType\" => \"Limit\",\n                        \"accountUid\" => \"72f9bd80-d65c-4f73-9a3e-cb9464e88c35\",\n                        \"timestamp\" => 1669116246449,\n                        \"limitPrice\" => \"1.0\"\n                    ),\n                    \"reason\" => \"new_user_order\",\n                    \"orderError\" => \"insufficient_margin\"\n                )\n            ),\n            \"uid\" => \"69a24b12-3a5b-470c-bac8-c65600b595d0\",\n            \"timestamp\" => 1669116246449\n        )\n    ],\n    \"len\" => 1\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_orderbook-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_orderbook","text":"get_orderbook(client::FuturesBaseRESTAPI; symbol::Union{String,Nothing}=nothing)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-market-data-get-orderbook, https://support.kraken.com/hc/en-us/articles/360022839551-Order-Book\n\nReturns the current orderbook including asks and bids of given symbol.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_orderbook(client, symbol=\"PI_XBTUSD\"))\nDict{String, Any}(\n    \"orderBook\" => Dict{String, Any}(\n        \"asks\" => Any[\n            Any[17335.5, 328], Any[17339.5, 1721], Any[17340, 1770],\n            Any[17341.5, 2736], Any[17343, 10379], Any[17344, 3000],\n            Any[17344.5, 10366], Any[17346, 22052], Any[17346.5, 39912],\n            Any[17347.5, 19052], Any[17348.5, 6000], Any[17349, 19052],\n            ...\n        ],\n        \"bids\" => Any[\n            ...\n        ]\n    ),\n    \"result\": \"success\",\n    \"serverTime\": \"2020-08-27T17:03:33.196Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_pnl_currency_preference-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_pnl_currency_preference","text":"get_pnl_preference(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-multi-collateral-get-pnl-currency-preference-for-a-market\n\nReturns the current asset-specific pnl preference.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_pnl_currency_preference(client))\nDict{String,Any{(\n    \"result\" => \"success\",\n    \"serverTime\" => \"2022-06-28T15:04:06.710Z\",\n    \"preferences\" => Any[Dict{String,Any}(\n        \"symbol\" => \"PF_XBTUSD\",\n        \"pnlCurrency\" => \"BTC\"\n    )]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_public_execution_events-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_public_execution_events","text":"get_public_execution_events(\n    client::FuturesBaseRESTAPI;\n    tradeable::String,\n    before::Union{Int,String,Nothing}=nothing,\n    continuation_token::Union{String,Nothing}=nothing,\n    since::Union{Int,String,Nothing}=nothing,\n    sort::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-market-history-get-public-execution-events, https://support.kraken.com/hc/en-us/articles/4401755685268-Market-History-Executions\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_public_execution_events(client, tradeable=\"PI_XBTUSD\"))\nDict{String, Any}(\n    \"continuationToken\" => \"MTY3MzM0NDAyMzMyNy83ODc0OTY5NjI4NQ==\",\n    \"elements\" => Any[Dict{String, Any}(\n        \"event\" => Dict{String, Any}(\n            \"Execution\" => Dict{String, Any}(\n                \"execution\" => Dict{String, Any}(\n                    \"takerOrder\" => Dict{String, Any}(\n                        \"tradeable\" => \"PI_XBTUSD\",\n                        \"orderType\" => \"IoC\",\n                        \"reduceOnly\" => false,\n                        \"uid\" => \"b77f469e-7548-4ab5-a921-98bab50dbbb7\",\n                        \"lastUpdateTimestamp\" => 1673374561273,\n                        \"direction\" => \"Buy\",\n                        \"timestamp\" => 1673374561273,\n                        \"quantity\" => \"8999.00000000\",\n                        \"limitPrice\" => \"17352.50000000\"\n                    ),\n                    \"markPrice\" => \"17338.91438972669\",\n                    \"price\" => \"17352.5\",\n                    \"limitFilled\" => false,\n                    \"uid\" => \"dd6b4ad4-a985-4428-8689-11e7f7fe5d4c\",\n                    \"makerOrder\" => Dict{String, Any}(\n                        \"tradeable\" => \"PI_XBTUSD\",\n                        \"orderType\" => \"Post\",\n                        \"reduceOnly\" => false,\n                        \"uid\" => \"82e8ff43-4dc7-4670-8f46-6a523c077ba8\",\n                        \"lastUpdateTimestamp\" => 1673374561257,\n                        \"direction\" => \"Sell\",\n                        \"timestamp\" => 1673374559677,\n                        \"quantity\" => \"27907.00000000\",\n                        \"limitPrice\" => \"17352.5\"\n                    ),\n                    \"timestamp\" => 1673374561273,\n                    \"usdValue\" => \"8999.00\",\n                    \"quantity\" => \"8999.00000000\"\n                ),\n                \"takerReducedQuantity\" => \"\"\n            )\n        ),\n        \"uid\" => \"63b6a497-b554-4af5-81bd-787f7e2bf1c7\",\n        \"timestamp\" => 1673374561273\n    ), ...]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_public_mark_price_events-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_public_mark_price_events","text":"get_public_mark_price_events(\n    client::FuturesBaseRESTAPI;\n    tradeable::String,\n    before::Union{Int,String,Nothing}=nothing,\n    continuation_token::Union{String,Nothing}=nothing,\n    since::Union{Int,String,Nothing}=nothing,\n    sort::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-market-history-get-public-mark-price-events, https://support.kraken.com/hc/en-us/articles/4401748276116-Market-History-Mark-Price\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_public_mark_price_events(client, tradeable=\"PI_XBTUSD\"))\nDict{String, Any}(\n    \"continuationToken\" => \"MTY3MzM3NDg4NjM4MC83ODc4OTkxMDM4Nw==\",\n    \"elements\" => Any[Dict{String, Any}(\n        \"event\" => Dict{String, Any}(\n            \"OrderUpdated\" => Dict{String, Any}(\n                \"reducedQuantity\" => \"0\",\n                \"oldOrder\" => Dict{String, Any}(\n                    \"tradeable\" => \"PI_XBTUSD\",\n                    \"orderType\" => \"Post\",\n                    \"reduceOnly\" => false,\n                    \"uid\" => \"28e2dc51-e473-4621-ad30-88d289e2258e\",\n                    \"lastUpdateTimestamp\" => 1673374894474,\n                    \"direction\" => \"Sell\",\n                    \"timestamp\" => 1673354694830,\n                    \"quantity\" => \"6000\",\n                    \"limitPrice\" => \"17384.0\"\n                ),\n                \"newOrder\" => Dict{String, Any}(\n                    \"tradeable\" => \"PI_XBTUSD\",\n                    \"orderType\" => \"Post\",\n                    \"reduceOnly\" => false,\n                    \"uid\" => \"28e2dc51-e473-4621-ad30-88d289e2258e\",\n                    \"lastUpdateTimestamp\" => 1673374894696,\n                    \"direction\" => \"Sell\",\n                    \"timestamp\" => 1673354694830,\n                    \"quantity\" => \"6000\",\n                    \"limitPrice\" => \"17376.0\"\n                ), \"reason\" => \"edited_by user\"\n            )\n        ),\n        \"uid\" => \"fc6fd47a-303b-45fc-a187-d6345b664560\",\n        \"timestamp\" => 1673374894696\n    ), ...]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_public_order_events-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_public_order_events","text":"get_public_order_events(\n    client::FuturesBaseRESTAPI;\n    tradeable::String,\n    before::Union{Int,String,Nothing}=nothing,\n    continuation_token::Union{String,Nothing}=nothing,\n    since::Union{Int,String,Nothing}=nothing,\n    sort::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-market-history-get-public-order-events, https://support.kraken.com/hc/en-us/articles/4401755906452-Market-History-Orders\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_public_order_events(client, tradeable=\"PI_XBTUSD\"))\nDict{String, Any}(\n    \"continuationToken\" => \"MTY3MzM3NDczMjg2MC83ODc4OTc0NDU2OA==\",\n    \"elements\" => Any[\n        Dict{String, Any}(\n            event\" => Dict{String, Any}(\n                \"OrderPlaced\" => Dict{String, Any}(\n                    \"reducedQuantity\" => \"\",\n                    \"order\" => Dict{String, Any}(\n                        \"tradeable\" => \"PI_XBTUSD\",\n                        \"orderType\" => \"Post\",\n                        \"reduceOnly\" => false,\n                        \"uid\" => \"68fb6c2e-5f85-44b9-a6f2-aae9ac6cd0c5\",\n                        \"lastUpdateTimestamp\" => 1673374745391,\n                        \"direction\" => \"Buy\",\n                        \"timestamp\" => 1673374745391,\n                        \"quantity\" => \"118\",\n                        \"limitPrice\" => \"17167.0\"\n                    ),\n                    \"reason\" => \"new_user_order\"\n                )\n            ),\n            \"uid\" => \"58733df7-f573-4ddd-96c5-bf4978b6568d\",\n            \"timestamp\" => 1673374745391\n        ), Dict{String, Any}(\n            \"event\" => Dict{String, Any}(\n                \"OrderUpdated\" => Dict{String, Any}(\n                    \"reducedQuantity\" => \"0\",\n                    \"oldOrder\" => Dict{String, Any}(\n                        \"tradeable\" => \"PI_XBTUSD\",\n                        \"orderType\" => \"Post\",\n                        \"reduceOnly\" => false,\n                        \"uid\" => \"54de25df-f2e4-49d1-8281-c6a867fa2e8e\",\n                        \"lastUpdateTimestamp\" => 1673374745228,\n                        \"direction\" => \"Sell\",\n                        \"timestamp\" => 1673352860129,\n                        \"quantity\" => \"300000\",\n                        \"limitPrice\" => \"17381.0\"\n                    ),\n                    \"newOrder\" => Dict{String, Any}(\n                        \"tradeable\" => \"PI_XBTUSD\",\n                        \"orderType\" => \"Post\",\n                        \"reduceOnly\" => false,\n                        \"uid\" => \"54de25df-f2e4-49d1-8281-c6a867fa2e8e\",\n                        \"lastUpdateTimestamp\" => 1673374745384,\n                        \"direction\" => \"Sell\",\n                        \"timestamp\" => 1673352860129,\n                        \"quantity\" => \"300000\",\n                        \"limitPrice\" => \"17383.0\"\n                    ),\n                    \"reason\" => \"edited_by user\"\n                )\n            ),\n            \"uid\" => \"f741b4a5-44d6-45a7-b287-77eba4a167b7\",\n            \"timestamp\" => 1673374745384\n        ), ...\n    ]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_resolutions-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_resolutions","text":"get_resolutions(client::FuturesBaseRESTAPI; tick_type::String, tradeable::String)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-charts-ohlc-get-resolutions\n\nReturns the list of available resolutions.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia>  println(get_resolutions(client, tradeable=\"PI_XBTUSD\", tick_type=\"spot\"))\nAny[\"1d\", \"5m\", \"15m\", \"30m\", \"4h\", \"1m\", \"1h\", \"1w\", \"12h\"]\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_tick_types-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_tick_types","text":"get_tick_types(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-charts-ohlc-get-tick-types\n\nReturns the available tick types.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_tick_types(client))\nAny[\"mark\", \"spot\", \"trade\"]\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_tickers-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_tickers","text":"get_tickers(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-market-data-get-tickers, https://support.kraken.com/hc/en-us/articles/360022839531-Tickers\n\nReturns the available ticker for all available Futures symbols.\n\nAuthenticated client not required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_tickers(client))\nDict{String, Any}(\n    \"serverTime\" => \"2023-01-10T18:04:18.210Z\",\n    \"tickers\" => Any[\n        Dict{String, Any}(\n            \"fundingRate\" => 3.6841376588881e-5,\n            \"lastSize\" => 2.6, \"bid\" => 35.48,\n            \"fundingRatePrediction\" => -0.000541681480000012,\n            \"lastTime\" => \"2023-01-10T11:42:04.518Z\",\n            \"pair\" => \"COMP:USD\",\n            \"bidSize\" => 14,\n            \"volumeQuote\" => 331.9023,\n            \"last\" => 35.419,\n            \"suspended\" => false,\n            \"askSize\" => 17,\n            \"postOnly\" => false,\n            \"symbol\" => \"pf_compusd\",\n            \"openInterest\" => 617.5,\n            \"markPrice\" => 35.527,\n            \"ask\" => 35.575,\n            \"tag\" => \"perpetual\",\n            \"vol24h\" => 9.3,\n            \"open24h\" => 36,\n            \"indexPrice\" => 35.524\n        ), Dict{String, Any}(\n            \"lastSize\" => 250,\n            \"bid\" => 80.27,\n            \"lastTime\" => \"2023-01-10T18:03:31.516Z\",\n            \"pair\" => \"LTC:USD\",\n            ...\n        ), ...\n    ]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_trade_history-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_trade_history","text":"get_trade_history(client::FuturesBaseRESTAPI;\n    symbol::Union{String,Nothing}=nothing,\n    lastTime::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-market-data-get-trade-history, https://support.kraken.com/hc/en-us/articles/360022839511-History\n\nLists historical trades of this user.\n\nAuthenticated client not required\n\nNote\n\nlastTime must be in the format like: 2020-08-27T17:03:33.196Z\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_trade_history(client, symbol=\"PI_XBTUSD\"))\nDict{String, Any}(\n    \"history\" => Any[\n        Dict{String, Any}(\n            \"price\" => 17308.5,\n            \"time\" => \"2023-01-10T16:58:58.667Z\",\n            \"side\" => \"sell\",\n            \"uid\" => \"15e8ea9f-6ccf-4545-b29f-18b9e8f93949\",\n            \"size\" => 1730,\n            \"type\" => \"fill\",\n            \"trade_id\" => 100\n        ), Dict{String, Any}(\n            \"price\" => 17289.5,\n            \"time\" => \"2023-01-10T17:01:13.391Z\",\n            \"side\" => \"buy\",\n            \"uid\" => \"1475a325-0d14-46bd-9fb7-0deab5746e1c\",\n            \"size\" => 4524,\n            \"type\" => \"fill\",\n            \"trade_id\" => 99\n        ), ...\n    ],\n    \"result\": \"success\",\n    \"serverTime\": \"2022-08-27T17:03:33.196Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_tradeable_products-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_tradeable_products","text":"get_tradeable_products(client::FuturesBaseRESTAPI; tick_type::String)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-charts-ohlc-get-tradeable-products\n\nReturns a list of available products for trading.\n\nAuthenticated client not required\n\nAttributes\n\ntick_type::String: must be one of [\"spot\", \"mark\", \"trade\"]\n\nExamples\n\njulia> client = FuturesBaseRESTAPI()\njulia> println(get_tradeable_products(client, tick_type=\"mark\"))\nAny[\n    \"FI_ETHUSD_210924\", \"PF_LUNA2USD\", \"FI_LTCUSD_221230\", \"PF_UNIUSD\",\n    \"FI_XBTUSD_230331\", \"FI_BCHUSD_211126\", \"PI_ETHUSD\", \"FI_ETHUSD_220527\",\n    ...\n]\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.get_trigger_events-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.get_trigger_events","text":"get_trigger_events(\n    client::FuturesBaseRESTAPI;\n    before::Union{Int,String,Nothing}=nothing,\n    continuation_token::Union{String,Nothing}=nothing,\n    since::Union{Int,String,Nothing}=nothing,\n    sort::Union{String,Nothing}=nothing,\n    tradeable::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-market-history-get-trigger-events\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_trigger_events(\n...        client,\n...        tradeable=\"PI_XBTUSD\",\n...        sort=\"desc\",\n...        before=\"1668989233\"\n...    ))\nDict{String, Any}(\n    \"accountUid\" => \"12f2b283-af1a-a173-aaae-ce9a64e122abc1\",\n    \"elements\" => Any[],\n    \"len\" => 0\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.set_leverage_preference-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.set_leverage_preference","text":"set_leverage_preference(client::FuturesBaseRESTAPI; symbol::String, maxLeverage::Union{Float64,Nothing}=nothing)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-multi-collateral-set-the-leverage-setting-for-a-market\n\nEnables setting the leverage preference.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(set_leverage_preference(client, symbol=\"PI_XBTUSD\", maxLeverage=1))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"serverTime\" => \"2022-06-28T14:48:58.711Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesMarketModule.set_pnl_currency_preference-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesMarketModule.set_pnl_currency_preference","text":"set_pnl_currency_preference(client::FuturesBaseRESTAPI; symbol::String, pnlPreference::String)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-multi-collateral-set-pnl-currency-preference-for-a-market\n\nEnables editing the current asset-specific pnl preference.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(set_pnl_currency_preference(client, symbol=\"PI_XBTUSD\", pnlPreference=\"XBT\"))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"serverTime\" => \"2022-06-28T14:48:58.711Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"","category":"page"},{"location":"futures/futures/#User","page":"Kraken Futures REST API","title":"User","text":"","category":"section"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"Modules = [KrakenEx.FuturesUserModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"futures/futures/#KrakenEx.FuturesUserModule","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule","text":"FuturesUserModule\n\nEnables accessing Futures user endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_account_log-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_account_log","text":"get_account_log(client::FuturesBaseRESTAPI;\n    before::Union{Int,String,Nothing}=nothing,\n    since::Union{Int,String,Nothing}=nothing,\n    count::Union{Int,String,Nothing}=nothing,\n    from::Union{Int,String,Nothing}=nothing,\n    to::Union{Int,String,Nothing}=nothing,\n    sort::Union{String,Nothing}=nothing,\n    info::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-account-log\n\nEnables querying the log of specific events.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_account_log(\n...        client, \n...        before=\"1604937694000\", \n...        info=\"futures liquidation\"\n...    ))\nDict{String, Any}(\n    \"accountUid\" => \"XXX-XXX-XXX--XXXX\", \n    \"logs\" => Any[]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_account_log_csv-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_account_log_csv","text":"get_account_log_csv(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-history-account-log-get-recent-account-log-csv\n\nEnables requesting the account log to save it as for example as csv.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> log = get_account_log_csv(client)\njulia> open(\"myAccountLog.csv\", \"w\") do io\n...        write(io, log)\n...    end\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_notificatios-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_notificatios","text":"get_notificatios(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-general-get-notifications\n\nReturns information defined by Kraken, e.g. \"PostOnly mode at 01.01.2023 00:00:00\"\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_notificatios(client))\nDict{String, Any}(\n    \"serverTime\" => \"2023-01-10T18:33:28.582Z\", \n    \"notifications\" => Any[], \n    \"result\" => \"success\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_open_orders-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_open_orders","text":"get_open_orders(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-account-information-get-open-orders\n\nLists the open orders of this user.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_open_orders(client))\nDict{String, Any}(\n    \"openOrders\" => Any[], \n    \"serverTime\" => \"2023-01-10T18:31:07.027Z\", \n    \"result\" => \"success\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_open_positions-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_open_positions","text":"get_open_positions(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-account-information-get-open-positions\n\nLists the open positions of this user.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_open_positions(client))\nDict{String, Any}(\n    \"openPositions\" => Any[],\n    \"serverTime\" => \"2023-01-10T18:31:45.903Z\", \n    \"result\" => \"success\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_subaccounts-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_subaccounts","text":"get_subaccounts(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-account-information-get-subaccounts\n\nLists the available subaccounts.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_subaccounts(client))\nDict{String, Any}(\n    \"subaccounts\" => Any[], \n    \"serverTime\" => \"2023-01-10T18:32:03.993Z\", \n    \"masterAccountUid\" => \"XXX-XXX-XXX-XXX\", \n    \"result\" => \"success\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_unwindqueue-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_unwindqueue","text":"get_unwindqueue(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-account-information-get-position-percentile-of-unwind-queue\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_unwindqueue(client))\nDict{String, Any}(\n    \"queue\" => Any[], \n    \"serverTime\" => \"2023-01-10T18:33:00.647Z\", \n    \"result\" => \"success\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesUserModule.get_wallets-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesUserModule.get_wallets","text":"get_wallets(client::FuturesBaseRESTAPI)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-account-information-get-wallets\n\nLists the user-specifc wallets.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_wallets(client))\nict{String, Any}(\n    \"serverTime\" => \"2023-01-10T18:29:00.251Z\", \n    \"accounts\" => Dict{String, Any}(\n        \"fv_xrpxbt\" => Dict{String, Any}(\n            \"currency\" => \"xbt\", \n            \"marginRequirements\" => Dict{String, Any}(\n                \"tt\" => 0.0, \"mm\" => 0.0, \"lt\" => 0.0, \"im\" => 0.0\n            ), \n            \"auxiliary\" => Dict{String, Any}(\n                \"pv\" => 0.0, \"pnl\" => 0.0, \"funding\" => 0.0, \"af\" => 0.0, \"usd\" => 0\n            ), \n            \"balances\" => Dict{String, Any}(\"xbt\" => 0.0), \n            \"triggerEstimates\" => Dict{String, Any}(\n                \"tt\" => 0, \"mm\" => 0, \"lt\" => 0, \"im\" => 0\n            ), \n            \"type\" => \"marginAccount\"\n        ), \n        \"fi_xbtusd\" => Dict{String, Any}(\n            \"currency\" => \"xbt\", \n            \"marginRequirements\" => Dict{String, Any}(\n                \"tt\" => 0.0, \"mm\" => 0.0, \"lt\" => 0.0, \"im\" => 0.0\n            ), \n            \"auxiliary\" => Dict{String, Any}(\n                \"pv\" => 0.0, \"pnl\" => 0.0, \"funding\" => 0.0, \"af\" => 0.0, \"usd\" => 0\n            ), \n            \"balances\" => Dict{String, Any}(\"xbt\" => 0.0),\n            \"triggerEstimates\" => Dict{String, Any}(\n                \"tt\" => 0, \"mm\" => 0, \"lt\" => 0, \"im\" => 0\n            ), \"type\" => \"marginAccount\"\n        ), ...\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"","category":"page"},{"location":"futures/futures/#Trade","page":"Kraken Futures REST API","title":"Trade","text":"","category":"section"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"Modules = [KrakenEx.FuturesTradeModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule","text":"FuturesTradeModule\n\nEnables accessing Futures trade endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.cancel_all_orders-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.cancel_all_orders","text":"cancel_all_orders(client::FuturesBaseRESTAPI; symbol::Union{String,Nothing}=nothing)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-order-management-cancel-all-orders\n\nCancels all active orders of a user.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(cancel_all_orders(client))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"cancelStatus\" => Dict{String,Any}(\n        \"receivedTime\" => \"2019-08-01T15:57:37.518Z\",\n        \"cancelOnly\" => \"all\",\n        \"status\" => \"cancelled\",\n        \"cancelledOrders\": Any[\n            Dict{String,Any}(\"order_id\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n            Dict{String,Any}(\"order_id\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n            ...\n        ],\n        \"orderEvents\" => Any[Dict{String,Any}(\n            \"uid\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            \"order\" => Dict{String,Any}(\n                \"orderId\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                \"cliOrdId\" => null,\n                \"type\" => \"stp\",\n                \"symbol\" => \"pi_xbtusd\",\n                \"side\" => \"buy\",\n                \"quantity\" => 2001,\n                \"filled\" => 0,\n                \"limitPrice\" => 11031,\n                \"stopPrice\" => 11031,\n                \"reduceOnly\" => false,\n                \"timestamp\" => \"2022-08-01T15:57:19.482Z\"\n            ),\n            \"type\": \"CANCEL\"\n        ), ...]\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.cancel_order-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.cancel_order","text":"cancel_order(client::FuturesBaseRESTAPI;\n    order_id::Union{String,Nothing}=nothing,\n    cliOrdId::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-order-management-cancel-order\n\nCancels an order by order_id or cliOrdId.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(cancel_order(client, order_id=\"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\"))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"cancelStatus\" => Dict{String,Any}(\n        \"status\" => \"cancelled\",\n        \"order_id\" => \"\"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX,\n        \"cancelOnly\" => \"all\",\n        \"receivedTime\" => \"2019-08-01T15:57:37.518Z\",\n        \"orderEvents\" => Any[Dict{String,Any}(\n            \"uid\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            \"order\" => Dict{String,Any}(\n                \"orderId\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                \"cliOrdId\" => null,\n                \"type\" => \"stp\",\n                \"symbol\" => \"pi_xbtusd\",\n                \"side\" => \"buy\",\n                \"quantity\" => 2001,\n                \"filled\" => 0,\n                \"limitPrice\" => 11031,\n                \"stopPrice\" => 11031,\n                \"reduceOnly\" => false,\n                \"timestamp\" => \"2022-08-01T15:57:19.482Z\"\n            ),\n            \"type\": \"CANCEL\"\n        ), ...]\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.create_batch_order-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.create_batch_order","text":"create_batch_order(client::FuturesBaseRESTAPI; batchorder_list::Vector{Dict{String,Any}})\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-order-management-batch-order-management\n\nCreates a batch of order instructions to create, edit or even cancel multiple orders at the same time. Authenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(create_batch_order(\n...        client,\n...        batchorder_list=[\n...            Dict{String,Any}(\n...                \"order\" => \"send\",\n...                \"order_tag\" => \"1\",\n...                \"orderType\" => \"lmt\",\n...                \"symbol\" => \"PI_XBTUSD\",\n...                \"side\" => \"buy\",\n...                \"size\" => 2,\n...                \"limitPrice\" => 15200.0,\n...                \"cliOrdId\" => \"my-another-client-id\"\n...            ),\n...            Dict{String,Any}(\n...                \"order\" => \"send\",\n...                \"order_tag\" => \"2\",\n...                \"orderType\" => \"stp\",\n...                \"symbol\" => \"PI_XBTUSD\",\n...                \"side\" => \"buy\",\n...                \"size\" => 1,\n...                \"limitPrice\" => 15100.0,\n...                \"stopPrice\" => 15090.0,\n...            ),\n...            Dict{String,Any}(\n...                \"order\" => \"send\",\n...                \"order_tag\" => \"3\",\n...                \"orderType\" => \"stp\",\n...                \"symbol\" => \"PI_XBTUSD\",\n...                \"side\" => \"buy\",\n...                \"size\" => 3,\n...                \"limitPrice\" => 15100.0,\n...                \"stopPrice\" => 14900.0,\n...            ),\n...            Dict{String,Any}(\n...                \"order\" => \"cancel\",\n...                \"order_id\" => \"f35a61dd-8a30-4d5f-a574-b5593ef0c050\",\n...            ),\n...            Dict{String,Any}(\n...                \"order\" => \"cancel\",\n...                \"cliOrdId\" => \"my_client_id1234\"\n...            )\n...        ]))\n...\njulia> # please see the linked Kraken Docs for response examples\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.create_order-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.create_order","text":"create_order(client::FuturesBaseRESTAPI;\n    orderType::String,\n    side::String,\n    size::Union{Float64,Int,String},\n    symbol::String,\n    cliOrdId::Union{String,Nothing}=nothing,\n    limitPrice::Union{String,Float64,Int,Nothing}=nothing,\n    stopPrice::Union{String,Float64,Int,Nothing}=nothing,\n    reduceOnly::Union{Bool,Nothing}=nothing,\n    triggerSignal::Union{String,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-order-management-send-order\n\nCreates/places an order.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(create_order(client,\n...         orderType=\"lmt\",\n...         side=\"buy\",\n...         size=1,\n...         limitPrice=16000.0,\n...         symbol=\"PI_XBTUSD\",\n...     ))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"sendStatus\" => Dict{String,Any}(\n        \"order_id\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        \"status\" => \"placed\",\n        \"receivedTime\" => \"2022-12-11T17:17:33.888Z\",\n        \"orderEvents\": Any[Dict{String,Any}(\n            \"executionId\" => \"XXXXX0XX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            \"price\" => 17000.0,\n            \"amount\" => 1,\n            \"orderPriorEdit\" => null,\n            \"orderPriorExecution\" => Dict{String,Any}(\n                    \"orderId\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                    \"cliOrdId\" => null,\n                    \"type\" => \"lmt\",\n                    \"symbol\" => \"pi_xbtusd\",\n                    \"side\" => \"buy\",\n                    \"quantity\" => 1,\n                    \"filled\" => 0,\n                    \"limitPrice\" => 16000.0,\n                    \"reduceOnly\" => false,\n                    \"timestamp\" => \"2012-12-11T17:17:33.888Z\",\n                    \"lastUpdateTimestamp\" => \"2012-12-11T17:17:33.888Z\"\n            ),\n            \"takerReducedQuantity\" => null,\n            \"type\" => \"EXECUTION\"\n        )]\n    ),\n    \"serverTime\": \"2019-12-11T17:17:33.888Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.dead_mans_switch-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.dead_mans_switch","text":"dead_mans_switch(client::FuturesBaseRESTAPI; timeout::Int=60)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-order-management-dead-man-39-s-switch\n\nEnables the dead mans switch to prevent unwanted behaviour e.g. during system instabilities. Set timeout=0 ro reset.\n\nAuthenticated client required\n\nSet timeout to 0 to reset the death man switch.\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(dead_mans_switch(client, timeout=60))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"status\" => Dict{String,Any}(\n        \"currentTime\" => \"2018-06-19T16:51:23.839Z\",\n        \"triggerTime\" => \"60\"\n    ),\n    \"serverTime\" => \"2018-06-19T16:51:23.839Z\"\n)\njulia> println(dead_mans_switch(client, timeout=0))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"status\" => Dict{String,Any}(\n        \"currentTime\" => \"2018-06-19T16:51:23.839Z\",\n        \"triggerTime\" => \"0\"\n    ),\n    \"serverTime\" => \"2018-06-19T16:51:23.839Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.edit_order-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.edit_order","text":"edit_order(client::FuturesBaseRESTAPI;\n    orderId::Union{String,Nothing}=nothing,\n    cliOrdId::Union{String,Nothing}=nothing,\n    limitPrice::Union{String,Float64,Int,Nothing}=nothing,\n    size::Union{String,Float64,Int,Nothing}=nothing,\n    stopPrice::Union{String,Float64,Int,Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-order-management-edit-order\n\nEnables editing placed orders which are still open.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(edit_order(client,\n...        orderId=\"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n...        size=2,\n...        limitPrice=16000,\n...    ))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"serverTime\" => \"2022-09-05T16:47:47.521Z\",\n    \"editStatus\" => Dict{String,Any}(\n        \"status\" => \"edited\",\n        \"orderId\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        \"receivedTime\" => \"2022-09-05T16:47:47.521Z\",\n        \"orderEvents\" => Any[\n            Dict{String,Any}(\n                \"old\" => Dict{String,Any}(\n                    \"orderId\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                    \"cliOrdId\" => null,\n                    \"type\" => \"lmt\",\n                    \"symbol\" => \"pi_xbtusd\",\n                    \"side\" => \"buy\",\n                    \"quantity\" => 1,\n                    \"filled\": => 0,\n                    \"limitPrice\" => 17000.0,\n                    \"reduceOnly\" => false,\n                    \"timestamp\" => \"2022-09-05T16:41:35.173Z\",\n                    \"lastUpdateTimestamp\" => \"2019-09-05T16:41:35.173Z\"\n                )\n                \"new\" => Dict{String,Any}(\n                    \"orderId\" => \"XXXXXXXX-XXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                    \"cliOrdId\" => null,\n                    \"type\" => \"lmt\",\n                    \"symbol\" => \"pi_xbtusd\",\n                    \"side\" => \"buy\",\n                    \"quantity\" => 2,\n                    \"filled\" => 0,\n                    \"limitPrice\" => 16000.0,\n                    \"reduceOnly\" => false,\n                    \"timestamp\" => \"2022-09-05T16:41:35.173Z\",\n                    \"lastUpdateTimestamp\" => \"2019-09-05T16:47:47.519Z\"\n                ),\n                \"reducedQuantity\": null,\n                \"type\": \"EDIT\"\n            )\n        ]\n    )\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.get_fills-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.get_fills","text":"get_fills(client::FuturesBaseRESTAPI; lastFillTime::Union{String,Nothing}=nothing)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-historical-data-get-your-fills\n\nReturns information about the user-specific fills of all Futures contracts.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_fills(client))\nDict{String,Any}(\n    \"result\" => \"success\",\n    \"fills\" => Any[Dict{String,Any}(\n        \"fill_id\" => \"3d57ed09-fbd6-44f1-8e8b-b10e551c5e73\",\n        \"symbol\" => \"pi_xbtusd\",\n        \"side\" => \"buy\",\n        \"order_id\" => \"693af756-055e-47ef-99d5-bcf4c456ebc5\",\n        \"size\" => 5490,\n        \"price\" => 9400,\n        \"fillTime\" => \"2020-07-22T13:37:27.077Z\",\n        \"fillType\" => \"maker\"\n    ), ...],\n    \"serverTime\" => \"2020-07-22T13:44:24.311Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesTradeModule.get_orders_status-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesTradeModule.get_orders_status","text":"get_orders_status(client::FuturesBaseRESTAPI;\n    orderIds::Union{Vector{String},Nothing}=nothing,\n    cliOrdIds::Union{Vector{String},Nothing}=nothing\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-order-management-get-the-current-status-for-specific-orders\n\nGet information about (a) specific order(s) using orderIds or cliOrdIds.\n\nAuthenticated client required\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"secret-key\")\njulia> println(get_orders_status(client, orderIds=[\"orderid1\", \"orderid2\"]))\nDict{String,Any}(\n    \"orders\" => Any[Dict{String,Any}\n      \"error\" => \"MARKET_SUSPENDED\",\n      \"order\" => {\n        \"cliOrdId\" => \"someniceid\",\n        \"filled\" => 0.1,\n        \"lastUpdateTimestamp\": \"2021-08-26T17:03:33.196Z\",\n        \"limitPrice\": 2,\n        \"orderId\": \"orderid1\",\n        \"priceTriggerOptions\": {\n          \"triggerPrice\": 1,\n          \"triggerSide\": \"TRIGGER_ABOVE\",\n          \"triggerSignal\": \"MARK_PRICE\"\n        },\n        \"quantity\": 5,\n        \"reduceOnly\": false,\n        \"side\": \"buy\",\n        \"symbol\": \"DOTUSD\",\n        \"timestamp\": \"2021-08-27T17:03:33.196Z\",\n        \"type\": \"TRIGGER_ORDER\"\n      },\n      \"status\": \"ENTERED_BOOK\",\n      \"updateReason\": \"LOADING_MARKET\"\n    }\n  ],\n  \"result\": \"success\",\n  \"serverTime\": \"2022-08-27T17:03:33.196Z\"\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"","category":"page"},{"location":"futures/futures/#Funding","page":"Kraken Futures REST API","title":"Funding","text":"","category":"section"},{"location":"futures/futures/","page":"Kraken Futures REST API","title":"Kraken Futures REST API","text":"Modules = [KrakenEx.FuturesFundingModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"futures/futures/#KrakenEx.FuturesFundingModule","page":"Kraken Futures REST API","title":"KrakenEx.FuturesFundingModule","text":"FuturesFundingModule\n\nEnables accessing Futures funding endpoints using predefined methods.\n\n\n\n\n\n","category":"module"},{"location":"futures/futures/#KrakenEx.FuturesFundingModule.get_historical_funding_rates-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesFundingModule.get_historical_funding_rates","text":"get_historical_funding_rates(client::FuturesBaseRESTAPI; symbol::String)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-historical-funding-rates-historicalfundingrates\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> println(get_historical_funding_rates(client, symbol=\"PI_XBTUSD\"))\nDict{String, Any}(\n    \"rates\" => Any[\n        Dict{String, Any}(\n            \"fundingRate\" => 1.0327058177e-8,\n            \"timestamp\" => \"2018-08-31T16:00:00.000Z\",\n            \"relativeFundingRate\" => 7.182407e-5\n        ),\n        Dict{String, Any}(\n            \"fundingRate\" => -1.2047162502e-8,\n            \"timestamp\" => \"2018-08-31T20:00:00.000Z\",\n            \"relativeFundingRate\" => -8.4873103125e-5\n        ),\n        Dict{String, Any}(\n            \"fundingRate\" => -9.645113378e-9,\n            \"timestamp\" => \"2018-09-01T00:00:00.000Z\",\n            \"relativeFundingRate\" => -6.76651e-5\n        ),\n        Dict{String, Any}(\n            \"fundingRate\" => -8.028122964e-9,\n            \"timestamp\" => \"2018-09-01T04:00:00.000Z\",\n            \"relativeFundingRate\" => -5.66897875e-5\n        ), ...\n    ]\n)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesFundingModule.initiate_subccount_transfer-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesFundingModule.initiate_subccount_transfer","text":"initiate_subccount_transfer(\n    client::FuturesBaseRESTAPI;\n    amount::Union{String,Float64,Int},\n    fromAccount::String,\n    toAccount::String,\n    unit::String,\n    fromUser::String,\n    toUser::String\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-transfers-initiate-sub-account-transfer\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> initiate_subccount_transfer(\n...        client,\n...        amount=200,\n...        fromAccount=\"SomeAccount\",\n...        toAccount=\"ToAnotherAccount\",\n...        fromUser=\"Marianne\",\n...        toUser=\"Perl\",\n...        unit=\"XBT\"\n...    )\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesFundingModule.initiate_wallet_transfer-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesFundingModule.initiate_wallet_transfer","text":"initiate_wallet_transfer(\n    client::FuturesBaseRESTAPI;\n    amount::Union{String,Float64,Int},\n    fromAccount::String,\n    toAccount::String,\n    unit::String\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-transfers-initiate-wallet-transfer\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> initiate_wallet_transfer(client,\n...        amount=100,\n...        fromAccount=\"some-cash-or-margin-account\",\n...        toAccount=\"another-cash-or-margin-account\",\n...        unit=\"the-currency-unit-to-transfer\"\n...    )\n\n\n\n\n\n","category":"method"},{"location":"futures/futures/#KrakenEx.FuturesFundingModule.initiate_withdrawal_to_spot_wallet-Tuple{KrakenEx.FuturesBaseAPIModule.FuturesBaseRESTAPI}","page":"Kraken Futures REST API","title":"KrakenEx.FuturesFundingModule.initiate_withdrawal_to_spot_wallet","text":"initiate_withdrawal_to_spot_wallet(\n    client::FuturesBaseRESTAPI;\n    amount::Union{String,Int,Float64},\n    currency::String,\n    sourceWallet::Union{String,Nothing}\n)\n\nKraken Docs: https://docs.futures.kraken.com/#http-api-trading-v3-api-transfers-initiate-withdrawal-to-spot-wallet\n\nExamples\n\njulia> client = FuturesBaseRESTAPI(key=\"api-key\", secret=\"api-secret\")\njulia> initiate_withdrawal_to_spot_wallet(\n...       client,\n...       amount=200,\n...       currency=\"XBT\",\n...       sourceWallet=\"Cross-Margin\"\n...    )\n\n\n\n\n\n","category":"method"},{"location":"","page":"Introduction","title":"Introduction","text":"   CurrentModule = KrakenEx","category":"page"},{"location":"#KrakenEx.jl","page":"Introduction","title":"KrakenEx.jl","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Futures and Spot Websocket and REST API Julia SDK for the Kraken Cryptocurrency Exchange 🐙","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"(Image: GitHub) (Image: License: GPL v3) (Image: Generic badge) (Image: version) (Image: CI) (Image: Documentation)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"⚠️ This is an unofficial collection of REST and websocket clients for Spot and Futures trading on the Kraken cryptocurrency exchange using Julia. Payward Ltd. and Kraken are in no way associated with the authors of this module and documentation.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This project is based on the python-kraken-sdk.","category":"page"},{"location":"#Disclaimer","page":"Introduction","title":"Disclaimer","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"There is no guarantee that this software will work flawlessly at this or later times. Of course, no responsibility is taken for possible profits or losses. This software probably has some errors in it, so use it at your own risk. Also no one should be motivated or tempted to invest assets in speculative forms of investment. By using this software you release the author(s) from any liability regarding the use of this software.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Features","page":"Introduction","title":"Features","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Clients:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Spot REST Clients\nSpot Websocket Client\nFutures REST Clients\nFutures Websocket Client","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"General:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"access both public and private endpoints\nresponsive error handling and custom exceptions\nextensive example scripts (see https://github.com/btschwertfeger/KrakenEx.jl)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Installation-and-setup","page":"Introduction","title":"Installation and setup","text":"","category":"section"},{"location":"#.-Install-the-Julia-Package:","page":"Introduction","title":"1. Install the Julia Package:","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"julia> using Pkg; Pkg.add(\"KrakenEx\")","category":"page"},{"location":"#.-Register-at-Kraken-and-generate-API-Keys:","page":"Introduction","title":"2. Register at Kraken and generate API Keys:","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Spot Trading: ttps://www.kraken.com/u/security/api\nFutures Trading: https://futures.kraken.com/trade/settings/api\nFutures Sandbox: https://demo-futures.kraken.com/settings/api","category":"page"},{"location":"#.-Start-using-the-provided-example-scripts","page":"Introduction","title":"3. Start using the provided example scripts","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Kraken Spot Examples\nKraken Futures Examples","category":"page"},{"location":"#.-Error-handling","page":"Introduction","title":"4. Error handling","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"If any unexpected behavior occurs, please check your API permissions, rate limits, update the KrakenEx.jl package, see the Troubleshooting Troubleshooting section, and if the error persits please open an issue on GitHub.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Troubleshooting","page":"Introduction","title":"Troubleshooting","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Check if your version of KrakenEx.jl version is the newest.\nCheck the permissions of your API keys and the required permissions on the respective endpoints.\nIf you get some cloudflare or rate limit errors, please check your Kraken Tier level and maybe apply for a higher rank if required.\nUse different API keys for different algorithms, because the nonce calculation is based on timestamps and a sent nonce must always be the highest nonce ever sent of that API key. Having multiple algorithms using the same keys will result in invalid nonce errors.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Notes","page":"Introduction","title":"Notes","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Coding standards are not always followed to make arguments and function names as similar as possible to those in the Kraken API documentations.\nWhen calling endpoints for examlpe the futures funding endpoint and you submit spaces, braces, etc in strings like \" ()[]{}|/\\*.+!^\" a KrakenAuthenticationError will be raised.","category":"page"},{"location":"#References","page":"Introduction","title":"References","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"https://docs.kraken.com/rest\nhttps://docs.kraken.com/websockets\nhttps://docs.futures.kraken.com\nhttps://support.kraken.com/hc/en-us/sections/360012894412-Futures-API","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"   CurrentModule = KrakenEx.FuturesWebSocketModule","category":"page"},{"location":"futures/futures_websocket/#Kraken-Futures-WebSocket-API","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"","category":"section"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"The listed functions and data types allow to access to public and private (authenticated) websocket feeds.","category":"page"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"Pages = [\"futures_websocket.md\"]","category":"page"},{"location":"futures/futures_websocket/#FuturesWebSocketClient","page":"Kraken Futures WebSocket API","title":"FuturesWebSocketClient","text":"","category":"section"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"FuturesWebSocketClient","category":"page"},{"location":"futures/futures_websocket/#KrakenEx.FuturesWebSocketModule.FuturesWebSocketClient","page":"Kraken Futures WebSocket API","title":"KrakenEx.FuturesWebSocketModule.FuturesWebSocketClient","text":"FuturesWebSocketClient\n\nType that stores information about the client and can be used to establish public and private websocket connections for  Kraken Futures trading.\n\nFields\n\nkey – Kraken Futures API key\nsecret – Kraken Futures Secret key\ncancel_public_connection – can be set disable the active public websocket connection\ncancel_private_connection – can be set to disable the active private websocket connection\n\nThe following will be managed by the connection:\n\nnew_challenge – newest signed message\nlast_challenge – last signed message\nchallenge_ready – is set if the challenge is signed\nurl – default websocket url for Kraken Futures\nactive_subscriptions – List of active subscribed feeds\npending_subscriptions – List of pending subscribtions\npublic_ws – Public connected websocket instance\nprivate_ws – Private connected websocket instance\navailable_public_feeds – List of all public feeds\navailable_private_feeds – List of all private feeds\n\nExampless\n\nFuturesWebSocketClient() – default, public client\nFuturesWebSocketClient(\"the-api-key\", \"the-api-secret-key\") – authenticated client for public and private requests\n\n\n\n\n\n","category":"type"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"","category":"page"},{"location":"futures/futures_websocket/#WebSocket-utilities","page":"Kraken Futures WebSocket API","title":"WebSocket utilities","text":"","category":"section"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"connect(\n    client::FuturesWebSocketClient;\n    callback::Core.Function,\n    public::Bool=true,\n    private::Bool=false\n)","category":"page"},{"location":"futures/futures_websocket/#KrakenEx.FuturesWebSocketModule.connect-Tuple{KrakenEx.FuturesWebSocketModule.FuturesWebSocketClient}","page":"Kraken Futures WebSocket API","title":"KrakenEx.FuturesWebSocketModule.connect","text":"connect(\n    client::FuturesWebSocketClient;\n    callback::Core.Function,\n    public::Bool=true,\n    private::Bool=false\n)\n\nCan create up to two (one private and one public) websocket connections. The public and/or private websocket object will be stored within the FuturesWebSocketClient. Websocket feeds can be subscribed and unsubscribed after a successful connection. This function must be invoked using @async. Private  websocket connections and privat feed subscriptions requre valid API keys on the passed  FuturesWebSocketClient object.\n\nAttributes\n\nclient::FuturesWebSocketClient – the FuturesWebSocketClient instance\ncallback::Core.Function – Callback function wich receives the websocket messages\npublic::Bool=true – switch to activate/deactivate the public websocket connection\nprivate::Bool=false – switch to activate/deactivate the private websocket connection\n\nExamples\n\njulia> # ws_client = FuturesWebSocketClient() # unauthenticated\njulia> ws_client = FuturesWebSocketClient(\"api-key\", \"secret-key\") # authenticated\njulia> on_message(msg::Union{Dict{String,Any},String}) = println(msg)\njulia> con = @async connect(ws_client, callback=on_message)\njulia> subscribe(client=ws_client, feed=\"ticker\", products=[\"PI_XBTUSD\", \"PF_SOLUSD\"]) # public feeds\njulia> subscribe(client=ws_client, feed=\"open_orders\") # private feed\njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"subscribe(;\n    client::FuturesWebSocketClient,\n    feed::String,\n    products::Union{Vector{String},Nothing}=nothing\n)","category":"page"},{"location":"futures/futures_websocket/#KrakenEx.FuturesWebSocketModule.subscribe-Tuple{}","page":"Kraken Futures WebSocket API","title":"KrakenEx.FuturesWebSocketModule.subscribe","text":"subscribe(; \n    client::FuturesWebSocketClient,\n    feed::String,\n    products::Union{Vector{String},Nothing}=nothing\n)\n\nSubscribe to a websocket feed.\n\nExamples\n\njulia> # ws_client = FuturesWebSocketClient() # unauthenticated\njulia> ws_client = FuturesWebSocketClient(\"api-key\", \"secret-key\") # authenticated\njulia> on_message(msg::Union{Dict{String,Any},String}) = println(msg)\njulia> con = @async connect(ws_client, callback=on_message)\njulia> subscribe(client=ws_client, feed=\"ticker\", products=[\"PI_XBTUSD\", \"PF_SOLUSD\"]) # public feeds\njulia> subscribe(client=ws_client, feed=\"open_orders\") # private feed\njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"futures/futures_websocket/","page":"Kraken Futures WebSocket API","title":"Kraken Futures WebSocket API","text":"unsubscribe(;\n    client::FuturesWebSocketClient,\n    feed::String,\n    products::Union{Vector{String},Nothing}=nothing\n)","category":"page"},{"location":"futures/futures_websocket/#KrakenEx.FuturesWebSocketModule.unsubscribe-Tuple{}","page":"Kraken Futures WebSocket API","title":"KrakenEx.FuturesWebSocketModule.unsubscribe","text":"unsubscribe(;\n    client::FuturesWebSocketClient,\n    feed::String,\n    products::Union{Vector{String},Nothing}=nothing\n)\n\nUnsubscribe from a subscribed feed.\n\nExamples\n\njulia> # ws_client = FuturesWebSocketClient() # unauthenticated\njulia> ws_client = FuturesWebSocketClient(\"api-key\", \"secret-key\") # authenticated\njulia> on_message(msg::Union{Dict{String,Any},String}) = println(msg)\njulia> con = @async connect(ws_client, callback=on_message)\njulia> unsubscribe(client=ws_client, feed=\"ticker\", products=[\"PI_XBTUSD\", \"PF_SOLUSD\"]) # public feeds\njulia> unsubscribe(client=ws_client, feed=\"open_orders\") # private feed\njulia> wait(conn)\n\n\n\n\n\n","category":"method"},{"location":"exceptions/#Kraken-Exceptions","page":"Exceptions","title":"Kraken Exceptions","text":"","category":"section"},{"location":"exceptions/","page":"Exceptions","title":"Exceptions","text":"This package uses custom exceptions which can be thrown or even catched. Exceptions are thrown when the responses include errors.","category":"page"},{"location":"exceptions/","page":"Exceptions","title":"Exceptions","text":"   CurrentModule = KrakenEx","category":"page"},{"location":"exceptions/","page":"Exceptions","title":"Exceptions","text":"Modules = [KrakenEx.ExceptionsModule]\nPrivate = false\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"exceptions/#KrakenEx.ExceptionsModule","page":"Exceptions","title":"KrakenEx.ExceptionsModule","text":"ExceptionsModule\n\nCollection of custom exceptions for the Kraken.jl package.\n\n\n\n\n\n","category":"module"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenApiLimitExceededError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenApiLimitExceededError","text":"KrakenApiLimitExceededError <: KrakenException{Exception}\n\nAPI rate limit exceeded. Please check your rate limits.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenAuthenticationError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenAuthenticationError","text":"KrakenAuthenticationError <: KrakenException{Exception}\n\nCredentials are invalid. \n\nThis can caused by invalid API keys or invalid request payload so that the  encryption creates invalid payloads.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenCannotOpenPositionError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenCannotOpenPositionError","text":"KrakenCannotOpenPositionError <: KrakenException{Exception}\n\nUser/tier is ineligible for margin trading.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenCostMinimumNotMetError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenCostMinimumNotMetError","text":"KrakenCostMinimumNotMetError <: KrakenException{Exception}\n\nCost (price * volume) does not meet costmin.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenDeadlineElapsedError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenDeadlineElapsedError","text":"KrakenDeadlineElapsedError <: KrakenException{Exception}\n\nThe request timed out according to the default or specified deadline.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenException","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenException","text":"KrakenException{T}\n\nBase type for all custom exceptions of this package.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInsufficientAvailableFundsError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInsufficientAvailableFundsError","text":"KrakenInsufficientAvailableFundsError <: KrakenException{Exception}\n\nClient does not have the necessary funds.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInsufficientFundsError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInsufficientFundsError","text":"KrakenInsufficientFundsError <: KrakenException{Exception}\n\nClient does not have the necessary funds.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInsufficientMarginError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInsufficientMarginError","text":"KrakenInsufficientMarginError <: KrakenException{Exception}\n\nExchange does not have available funds for this margin trade.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidAPIKeyError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidAPIKeyError","text":"KrakenInvalidAPIKeyError <: KrakenException{Exception}\n\nAn invalid API-Key header was supplied.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidAccountError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidAccountError","text":"KrakenInvalidAccountError <: KrakenException{Exception}\n\nThe account is invalid.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidAmountError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidAmountError","text":"KrakenInvalidAmountError <: KrakenException{Exception}\n\nThe specified amount is invalid.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidArgumentsError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidArgumentsError","text":"KrakenInvalidArgumentsError <: KrakenException{Exception}\n\nThe request payload is malformed, incorrect or ambiguous.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidArgumentsIndexUnavailableError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidArgumentsIndexUnavailableError","text":"KrakenInvalidArgumentsIndexUnavailableError <: KrakenException{Exception}\n\nIndex pricing is unavailable for stop/profit orders on this pair.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidNonceError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidNonceError","text":"KrakenInvalidNonceError <: KrakenException{Exception}\n\nAn invalid nonce was supplied.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidOrderError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidOrderError","text":"KrakenInvalidOrderError <: KrakenException{Exception}\n\nOrder is invalid.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidPriceError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidPriceError","text":"KrakenInvalidPriceError <: KrakenException{Exception}\n\nPrice is invalid.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidReferenceIdError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidReferenceIdError","text":"KrakenInvalidReferenceIdError <: KrakenException{Exception}\n\nThe requested referece id is invalid.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidSignatureError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidSignatureError","text":"KrakenInvalidSignatureError <: KrakenException{Exception}\n\nAn invalid API-Sign header was supplied.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidStakingMethodError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidStakingMethodError","text":"KrakenInvalidStakingMethodError <: KrakenException{Exception}\n\nThe staking method is invalid.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenInvalidUnitError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenInvalidUnitError","text":"KrakenInvalidUnitError <: KrakenException{Exception}\n\nThe specified unit is invalid.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenMarginAllowedExceededError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenMarginAllowedExceededError","text":"KrakenMarginAllowedExceededError <: KrakenException{Exception}\n\nUser has exceeded their margin allowance.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenMarginLevelToLowError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenMarginLevelToLowError","text":"KrakenMarginLevelToLowError <: KrakenException{Exception}\n\nClient has insufficient equity or collateral.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenMarginPositionSizeExceededError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenMarginPositionSizeExceededError","text":"KrakenMarginPositionSizeExceededError <: KrakenException{Exception}\n\nClient would exceed the maximum position size for this pair.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenMarketInOnlyCancelModeError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenMarketInOnlyCancelModeError","text":"KrakenMarketInOnlyCancelModeError <: KrakenException{Exception}\n\nRequest can't be made at this time. Please check system status.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenMarketInOnlyPostModeError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenMarketInOnlyPostModeError","text":"KrakenMarketInOnlyPostModeError <: KrakenException{Exception}\n\nRequest can't be made at this time. Please check system status.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenNotFoundError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenNotFoundError","text":"KrakenNotFoundError <: KrakenException{Exception}\n\nThe resource is not found.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenOrderForEditNotFoundError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenOrderForEditNotFoundError","text":"KrakenOrderForEditNotFoundError <: KrakenException{Exception}\n\nThe order for edit could not be found.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenOrderLimitsExceededError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenOrderLimitsExceededError","text":"KrakenOrderLimitsExceededError <: KrakenException{Exception}\n\nOrder limits exceeded. Please check your open orders limit.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenOrderMinimumNotMetError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenOrderMinimumNotMetError","text":"KrakenOrderMinimumNotMetError <: KrakenException{Exception}\n\nOrder size does not meet ordermin.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenPermissionDeniedError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenPermissionDeniedError","text":"KrakenPermissionDeniedError <: KrakenException{Exception}\n\nAPI key doesn't have permission to make this request.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenPositionLimitExceeded","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenPositionLimitExceeded","text":"KrakenPositionLimitExceeded <: KrakenException{Exception}\n\nPosition limit exceeded. Please check your limits.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenRateLimitExceededError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenRateLimitExceededError","text":"KrakenRateLimitExceededError <: KrakenException{Exception}\n\nAPI rate limit exceeded. Please check your rate limits.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenServiceUnavailableError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenServiceUnavailableError","text":"KrakenServiceUnavailableError <: KrakenException{Exception}\n\nThe matching engine or API is offline.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenTickSizeInvalidCheckError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenTickSizeInvalidCheckError","text":"KrakenTickSizeInvalidCheckError <: KrakenException{Exception}\n\nPrice submitted is not a valid multiple of the pair's tick_size.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenToManyAdressesError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenToManyAdressesError","text":"KrakenToManyAdressesError <: KrakenException{Exception}\n\nTo many adresses specified.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenUnavailableError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenUnavailableError","text":"KrakenUnavailableError <: KrakenException{Exception}\n\nThe requested resource is unavailable.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenUnknownAssetError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenUnknownAssetError","text":"KrakenUnknownAssetError <: KrakenException{Exception}\n\nThe asset is unknown.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenUnknownAssetPairError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenUnknownAssetPairError","text":"KrakenUnknownAssetPairError <: KrakenException{Exception}\n\nThe asset pair is unknown.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenUnknownOrderError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenUnknownOrderError","text":"KrakenUnknownOrderError <: KrakenException{Exception}\n\nOrder is unknown.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenUnknownPositionError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenUnknownPositionError","text":"KrakenUnknownPositionError <: KrakenException{Exception}\n\nPosition is unknown.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenUnknownReferenceIdError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenUnknownReferenceIdError","text":"KrakenUnknownReferenceIdError <: KrakenException{Exception}\n\nThe requested referece id is unknown.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.KrakenUnknownWithdrawKeyError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.KrakenUnknownWithdrawKeyError","text":"KrakenUnknownWithdrawKeyError <: KrakenException{Exception}\n\nThe requested withdrawal key is unknown.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.MaxReconnectError","page":"Exceptions","title":"KrakenEx.ExceptionsModule.MaxReconnectError","text":"MaxReconnectError <: KrakenException{Exception}\n\nTo many reconnect tries.\n\n\n\n\n\n","category":"type"},{"location":"exceptions/#KrakenEx.ExceptionsModule.get_exception-Tuple{String}","page":"Exceptions","title":"KrakenEx.ExceptionsModule.get_exception","text":"get_exception(name::String)\n\nReturns the exception type by name.\n\n\n\n\n\n","category":"method"}]
}
